{"version":3,"sources":["components/common/logo/Logo.module.scss","components/common/title/Title.module.scss","components/common/loading/Loading.module.scss","pages/test/test.module.css","pages/test/testSuperInput/TestSuperInput.module.css","pages/test/testSuperButton/TestSuperButton.module.css","pages/test/testSuperCheckbox/TestSuperCheckbox.module.css","components/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","pages/test/testSuperSelect/TestSuperSelect.module.css","pages/test/testSuperRadio/TestSuperRadio.module.css","pages/test/testSuperRange/TestSuperRange.module.css","pages/error404/Error404.module.css","pages/test/testInputSearch/TestInputSearch.module.css","components/common/subTitle/SubTitle.module.scss","components/common/c1-SuperInputText/Input.module.scss","pages/passwordRecovery/enterEmail/EnterEmail.module.scss","components/common/c2-SuperButton/Button.module.scss","pages/mainPacksList/Main.module.scss","components/common/c2-SuperButton/Button.tsx","dal/api.ts","bll/app-reducer.ts","bll/auth-reducer.ts","pages/Profile.tsx","pages/error404/Error404.tsx","components/common/logo/Logo.tsx","components/common/title/Title.tsx","components/common/c3-SuperCheckbox/Checkbox.tsx","components/common/c1-SuperInputText/Input2.tsx","pages/Registr/Registration.tsx","pages/Registr/RegistrationContainer.tsx","bll/RegistrationReducer.ts","assets/img/loading/loading.svg","components/common/loading/Loading.tsx","components/common/inputFormik/InputFormik.tsx","pages/passwordRecovery/enterNewPassword/NewPassword.tsx","bll/PasswordRecoveryReducer.ts","pages/passwordRecovery/enterNewPassword/NewPasswordContainer.tsx","assets/img/authForgotPasswordCheckEmail/mail.svg","pages/passwordRecovery/checkEmail/CheckEmail.tsx","pages/passwordRecovery/enterEmail/EnterEmail.tsx","pages/passwordRecovery/enterEmail/EnterEmailContainer.tsx","config.ts","components/common/c1-SuperInputText/Input.tsx","pages/Login/AuthLogin.tsx","pages/Login/AuthLoginContainer.tsx","assets/Validators/validatorsLogin.ts","components/common/c1-SuperInputText/SuperInputText.tsx","pages/test/testSuperInput/TestSuperInput.tsx","components/common/c2-SuperButton/SuperButton.tsx","pages/test/testSuperButton/TestSuperButton.tsx","components/common/c3-SuperCheckbox/SuperCheckbox.tsx","pages/test/testSuperCheckbox/TestSuperCheckbox.tsx","pages/test/testSuperEditableSpan/localStorage/localStorage.ts","components/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","pages/test/testSuperEditableSpan/TestSuperEditableSpan.tsx","components/common/c5-SuperSelect/SuperSelect.tsx","pages/test/testSuperSelect/TestSuperSelect.tsx","components/common/c6-SuperRadio/SuperRadio.tsx","pages/test/testSuperRadio/TestSuperRadio.tsx","components/common/c7-SuperRange/SuperRange.tsx","pages/test/testSuperRange/TestSuperRange.tsx","components/common/inputSearch/InputSearch.tsx","bll/SearchReducer.ts","pages/test/testInputSearch/TestSuperInput.tsx","pages/test/Test.tsx","components/common/subTitle/SubTitle.tsx","components/common/Paginator/Paginator.tsx","components/tableHeader/TableHeader.tsx","components/tableRow/TableRow.tsx","components/Packs/Packs.tsx","components/Packs/PacksContainer.tsx","pages/mainPacksList/Main.tsx","pages/mainPacksList/MainContainer.tsx","pages/modalWindows/modalDeletePack/ModalDeletePack.tsx","pages/modalWindows/modalAddNewPack/ModalAddNewPack.tsx","pages/modalWindows/modalAddNewPack/ModalAddNewPackContainer.tsx","pages/modalWindows/modalEditPack/ModalEditPack.tsx","pages/modalWindows/modalEditPack/ModalEditPackContainer.tsx","Routes.tsx","pages/header/Header.tsx","App.tsx","reportWebVitals.ts","bll/store.ts","index.tsx","pages/passwordRecovery/enterNewPassword/NewPassword.module.scss","components/common/inputFormik/Input.module.scss","pages/Login/AuthLogin.module.scss","pages/passwordRecovery/checkEmail/CheckEmail.module.scss","components/tableHeader/TableHeader.module.scss","components/common/c3-SuperCheckbox/SuperCheckbox.module.css","components/common/c6-SuperRadio/SuperRadio.module.css","components/tableRow/TableRow.module.scss","pages/modalWindows/modalDeletePack/ModalDeletePack.module.scss","pages/modalWindows/modalAddNewPack/ModalAddNewPack.module.scss","pages/modalWindows/modalEditPack/ModalEditPack.module.scss","pages/Registr/AuthRegistr.module.scss","components/common/c1-SuperInputText/SuperInputText.module.css","components/common/c2-SuperButton/SuperButton.module.css","pages/test/testSuperEditableSpan/TestSuperEditableSpan.module.css","components/common/c5-SuperSelect/SuperSelect.module.scss","pages/header/Header.module.css"],"names":["module","exports","Size","Palette","Variant","instance","axios","create","baseURL","withCredentials","authAPI","post","delete","data","cardsAPI","config","get","params","id","put","initState","meObject","isLoggedIn","isInitialized","error","setIsLoggedAC","type","setInitializeAppAC","setAuthError","Button","size","palette","variant","title","className","restProps","sizeClassName","s","small","medium","big","paletteClassName","default","primary","secondary","variantClassName","defaultVariant","primaryVariant","secondaryVariant","finalClassName","btn","children","Profile","useSelector","state","auth","dispatch","useDispatch","onClick","then","res","to","PATH","LOGIN","Error404","eyeRit","eye","eyeR","blodAll","blod","blod2","container","p","dracula","con","hair","hairR","head","mouth","pageMs","pageMsg","Logo","logo","Title","props","Checkbox","onChange","useField","field","meta","finalInputClassName","checkbox","style","position","spanClassName","color","top","touched","Input2","rest","React","useState","visibleEye","setVisibleEye","group","required","input","passwordControl","showPassword","hidePassword","display","prev","width","height","viewBox","fill","xmlns","x1","y1","x2","y2","fillRule","clipRule","d","highlight","bar","label","validationSchema","yup","shape","email","password","min","confirmPassword","oneOf","acceptTerms","Registration","memo","initialValues","onSubmit","form","containerForm","formWrapper","name","btnInner","RegistrationContainer","useCallback","values","isRegistration","Loading","wrapperLoading","src","loadingImg","InputFormik","value","NewPassword","disable","loading","toLoginPage","formTitle","formSubTitle","formLogin","textNewPassword","buttonInner","disabled","toCheckEmailPage","setMailName","buttonDisable","disableButtonAC","showLoadingAC","ForgotNewPasswordContainer","recovery","token","useParams","resetPasswordToken","console","log","info","catch","rej","response","finally","CheckEmail","mailName","imgMail","mail","alt","textCheckEmail","EnterEmail","isMail","FORGOT_EMAIL","formEmail","textEmail","blockSingUp","formText","linkSingUp","EnterEmailContainer","from","message","Input","onChangeText","onKeyPress","onEnter","e","AuthLogin","formik","validate","useFormik","PROFILE","handleSubmit","errors","getFieldProps","RECOVERY_PASSWORD","linkForgotPassword","REGISTRATION","AuthLoginContainer","test","length","validatorsLogin","SuperInputText","finalSpanClassName","errorInput","superInput","currentTarget","key","TestSuperInput","text","setText","column","alert","SuperButton","red","button","TestSuperButton","SuperCheckbox","onChangeChecked","checked","TestSuperCheckbox","saveState","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","span","TestSuperEditableSpan","setValue","undefined","SuperSelect","options","onChangeOption","mappedOptions","map","o","i","option","finalSelectClassName","select","arr","TestSuperSelect","SuperRadio","onChangeCallback","body","radio","radDesign","RadText","TestSuperRadio","SuperRange","onChangeRange","finalRangeClassName","range","TestSuperRange","InputSearch","search","packName","cardPacks","cardPacksTotalCount","pageSize","currentPage","modalWindow","_id","setCardPacks","setTotalPacksCount","fetchPacks","a","requestPacks","page","pageCount","TestInputSearch","placeholder","Test","SubTitle","subtitle","Paginator","onPageChanged","portionSize","pagesCount","Math","ceil","pages","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","filter","backgroundColor","TableHeader","tableHeader","tableHeaderTitle","title1","title2","title3","title4","title5","TableRow","cardId","onRemovePack","onEditPack","addedPackUserId","userId","tableRowInner","cardsCount","updated","created","tableBtnInner","tableButton","Packs","tableInner","u","user_id","PacksContainer","app","history","useHistory","removePack","addId","EDIT_PACK","useEffect","PacksList","conteiner","packsList","aside","action","main","NEW_PACKS","wrapperPaginator","PacksListContainer","pageNumber","ModalDeletePack","modalDelete","containerDelete","modalTitleInner","modalDeleteText","ModalAddNewPack","modalAdd","containerAdd","modalAddInput","ModalAddNewPackContainer","date","cardsPack","path","grade","shots","rating","deckCover","private","ModalEditPack","ModalEditPackContainer","NEW_PASSWORD","TEST","HEADER","PACKS_LIST","DELETE_PACK","Routes","exact","render","Header","header","link","activeClassName","active","App","userData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a54f52bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__1tVsq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__1Fz2s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperLoading\":\"Loading_wrapperLoading__2NPRA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"test\":\"test_test__IIyo8\",\"wrapper\":\"test_wrapper__3gHNY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"TestSuperInput_column__1NR9-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"TestSuperButton_column__3FrDI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"TestSuperCheckbox_column__2KAKL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"SuperEditableSpan_span__1u_eP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"TestSuperSelect_column__3fzCi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"TestSuperRadio_column__68Lol\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"TestSuperRange_column__dL6Wv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error404_error__hv0o5\",\"dracula\":\"Error404_dracula__2BBch\",\"p\":\"Error404_p__2K9pF\",\"con\":\"Error404_con__3DuAs\",\"ani9\":\"Error404_ani9__3VOYi\",\"hair\":\"Error404_hair__2_-32\",\"hairR\":\"Error404_hairR__xhQ1n\",\"head\":\"Error404_head__1pmy1\",\"eye\":\"Error404_eye__2S3ps\",\"eyeR\":\"Error404_eyeR__3EVvo\",\"mouth\":\"Error404_mouth__2ACYC\",\"blod\":\"Error404_blod__vJeTN\",\"blod2\":\"Error404_blod2__2z8qc\",\"pageMs\":\"Error404_pageMs__uEx6i\",\"pageMsg\":\"Error404_pageMsg__3dYCb\",\"goBack\":\"Error404_goBack__2-2wT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"TestInputSearch_column__1p_wK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subtitle\":\"SubTitle_subtitle___OrDH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"group\":\"Input_group__4Hc5H\",\"input\":\"Input_input__3MRkb\",\"bar\":\"Input_bar__u8Rrn\",\"highlight\":\"Input_highlight__2oSQc\",\"inputHighlighter\":\"Input_inputHighlighter__3ImY6\",\"passwordControl\":\"Input_passwordControl__wsIbJ\",\"showPassword\":\"Input_showPassword__u8sia\",\"hidePassword\":\"Input_hidePassword__2lSAL\",\"label\":\"Input_label__3GpLB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerForm\":\"EnterEmail_containerForm__3lYzH\",\"formWrapper\":\"EnterEmail_formWrapper__RGq85\",\"formTitle\":\"EnterEmail_formTitle__1LQJv\",\"formSubTitle\":\"EnterEmail_formSubTitle___xtVv\",\"formEmail\":\"EnterEmail_formEmail__1x-MK\",\"formInput\":\"EnterEmail_formInput__IOvIX\",\"textEmail\":\"EnterEmail_textEmail__gRRBG\",\"buttonInner\":\"EnterEmail_buttonInner__3xjhM\",\"blockSingUp\":\"EnterEmail_blockSingUp__2sYlc\",\"formText\":\"EnterEmail_formText__lVZFT\",\"linkSingUp\":\"EnterEmail_linkSingUp__3godX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__1Bl1i\",\"small\":\"Button_small__26-_A\",\"medium\":\"Button_medium__3vHo-\",\"big\":\"Button_big__1r67U\",\"default\":\"Button_default__2xWCY\",\"primary\":\"Button_primary__38amJ\",\"secondary\":\"Button_secondary__PdNKy\",\"primaryVariant\":\"Button_primaryVariant__2WLht\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conteiner\":\"Main_conteiner__UkOwN\",\"packsList\":\"Main_packsList__2Nd_a\",\"aside\":\"Main_aside__2rs6n\",\"main\":\"Main_main__Bh5px\",\"search\":\"Main_search__1LBn4\",\"wrapperPaginator\":\"Main_wrapperPaginator__LqEBv\"};","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './Button.module.scss'\r\n\r\nexport const Button: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        size = 0,\r\n        palette = 0,\r\n        variant = 0,\r\n        title,\r\n        className,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const sizeClassName = size === 0 ? s.small : size === 1 ? s.medium : s.big\r\n    const paletteClassName = palette === 0 ? s.default : palette === 1 ? s.primary : s.secondary\r\n    const variantClassName = variant === 0 ? s.defaultVariant : variant === 1 ? s.primaryVariant : s.secondaryVariant\r\n\r\n    const finalClassName = `${s.btn} ${sizeClassName} ${paletteClassName} ${variantClassName} ${className} `\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps}\r\n        >\r\n            {title ? title : restProps.children}\r\n        </button>\r\n    )\r\n}\r\n//types\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    size?: Size\r\n    palette?: Palette\r\n    variant?: Variant\r\n}\r\n\r\nexport enum Size {\r\n    small,\r\n    medium,\r\n    big\r\n}\r\nexport enum Palette {\r\n    default,\r\n    primary,\r\n    secondary\r\n}\r\nexport enum Variant {\r\n    default,\r\n    primary,\r\n    secondary\r\n}","import {DEV_VERSION} from '../config';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const baseURL = DEV_VERSION\r\n    ? 'http://localhost:7542/2.0/'\r\n    : 'https://neko-back.herokuapp.com/2.0/'\r\n\r\nexport const instance = axios.create({\r\n    baseURL,\r\n    withCredentials: true,\r\n})\r\n\r\nexport const authAPI = {\r\n    /**\r\n     * Check user Data and cookies\r\n     * */\r\n    me() {\r\n        return instance.post<AuthMeResponseType>('auth/me')\r\n    },\r\n\r\n    /**\r\n     * Logout. Change token from server and remove cookies\r\n     * */\r\n    logout() {\r\n        return instance.delete<OtherResponseType>('auth/me')\r\n    },\r\n\r\n    /**\r\n     * Update user Data\r\n     * data {\r\n     *     name: string\r\n     *     avatar: \"https//avatar-url.img\" // url or base64\r\n     * }\r\n     * */\r\n    updateUser(data: UpdateUserParamsType) {\r\n        return instance.put<UpdateUserDataType>('auth/me', data)\r\n    },\r\n\r\n    /**\r\n     * Login request instance\r\n     * data {\r\n     *     email: string\r\n     *     password: string\r\n     *     rememberMe: boolean\r\n     * }\r\n     * */\r\n    login(data: LoginParamsType) {\r\n        return instance.post<AuthMeResponseType>('auth/login', data)\r\n    },\r\n\r\n    /**\r\n     * Registration user request instance\r\n     * data {\r\n     *     email: string\r\n     *     password: string\r\n     * }\r\n     * */\r\n    register(data: RegistrationParamsType) {\r\n        return instance.post<RegistrationResponseType>('auth/register', data)\r\n    },\r\n\r\n    /**\r\n     * Registration user request instance\r\n     * data {\r\n     *     email: string\r\n     *     from: string // Email subject\r\n     *     message: `<div style=\"background-color: lime; padding: 15px\">\r\n\t        password recovery link:\r\n\t        <a href='http://localhost:3000/#/set-new-password/$token$'>\r\n\t        link</a></div>`\r\n     * }\r\n     * */\r\n    recovery(data: ForgotParamsType) {\r\n        return instance.post<OtherResponseType>('auth/forgot', data)\r\n    },\r\n\r\n    /**\r\n     * Registration user request instance\r\n     * data {\r\n     *     password: string\r\n     *     resetPasswordToken: \"some-token-from-url\"\r\n     * }\r\n     * */\r\n    setNewPassword(data: SetNewPasswordParamsType) {\r\n        return instance.post<OtherResponseType>('auth/set-new-password', data)\r\n    },\r\n}\r\n\r\n// Types authAPI\r\n/** Request Types */\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe?: boolean\r\n}\r\nexport type RegistrationParamsType = {\r\n    email: string\r\n    password: string\r\n}\r\nexport type UpdateUserParamsType = {\r\n    name: string\r\n    avatar: string\r\n}\r\nexport type ForgotParamsType = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n}\r\nexport type SetNewPasswordParamsType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\n\r\n/** Response Types */\r\nexport type AuthMeResponseType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n\r\n    error?: string;\r\n}\r\ntype RegistrationResponseType = {\r\n    addedUser: {}\r\n    /**\r\n     * не важные данные, просто для проверки\r\n     * чтобы посмотреть как выглядит созданный юзер\r\n     */\r\n\r\n    error?: string;\r\n}\r\ntype UpdateUserDataType = {\r\n    updatedUser: AuthMeResponseType\r\n    /**\r\n     * весь юзер с изменёнными данными\r\n     * */\r\n\r\n    error?: string\r\n}\r\n\r\n/** Logout, Forgot, Set New Password response Type */\r\ntype OtherResponseType = {\r\n    info: string\r\n\r\n    error: string;\r\n}\r\n\r\n\r\nexport const cardsAPI = {\r\n    /**\r\n     * Get Cards Packs\r\n     * data {\r\n     *      ?packName=english // не обязательно\r\n     *      &min=3 // не обязательно\r\n     *      &max=9 // не обязательно\r\n     *      &sortPacks=0updated // не обязательно\r\n     *      &page=1 // не обязательно\r\n     *      &pageCount=4 // не обязательно\r\n     *      &user_id=5eb543f6bea3ad21480f1ee7 // чьи колоды\r\n     *      // не обязательно, или прийдут все\r\n     * }\r\n     * */\r\n    fetchCardPacks(config?: Partial<ConfigureFetchCardPacks>) {\r\n        return instance.get<FetchCardPacksType>('cards/pack', {params: config})\r\n    },\r\n    /**\r\n     * Create Cards Packs\r\n     * cardsPack: {\r\n     *      name: \"no Name\" // если не отправить будет таким\r\n     *      path: \"/def\" // если не отправить будет такой\r\n     *      grade: 0 // не обязателен\r\n     *      shots: 0 // не обязателен\r\n     *      rating: 0 // не обязателен\r\n     *      deckCover: \"url or base64\" // не обязателен\r\n     *      private: false // если не отправить будет такой\r\n     *      type: \"pack\" // если не отправить будет таким\r\n     * }\r\n     * */\r\n    createCardPacks(data: Partial<CreateCardPacks>) {\r\n        return instance.post('cards/pack', data)\r\n    },\r\n    /**\r\n     * Delete Cards Packs\r\n     * data: ?id=5eb6cb9a7a82672138e0d7c1\r\n     * */\r\n    deleteCardPacks(id: string) {\r\n        return instance.delete('cards/pack', {params: {id}})\r\n    },\r\n    /**\r\n     * Update Cards Packs\r\n     * cardsPack: {\r\n     *      _id: \"5eb6a2f72f849402d46c6ac7\"\r\n     *      name: \"new name\" // не обязательно\r\n     *      ... // не обязательно\r\n     * }\r\n     * */\r\n    updateCardPacks(data: UpdateCardPacks) {\r\n        return instance.put('cards/pack', data)\r\n    },\r\n\r\n    /**\r\n     * Fetch Cards\r\n     *        ?cardAnswer=english // не обязательно\r\n     *        &cardQuestion=english // не обязательно\r\n     *        &cardsPack_id=5eb6a2f72f849402d46c6ac7\r\n     *        &min=1 // не обязательно\r\n     *        &max=4 // не обязательно\r\n     *        &sortCards=0grade // не обязательно\r\n     *        &page=1 // не обязательно\r\n     *        &pageCount=7 // не обязательно\r\n     * */\r\n    fitchCards(config: FetchCardsConfig) {\r\n        return instance.get<FetchCardType>('cards/card', {params: config})\r\n    },\r\n    /**\r\n     * Create Card\r\n     *  card: {\r\n     *       cardsPack_id: \"5eb543f6bea3ad21480f1ee7\"\r\n     *       question: \"no question\" // если не отправить будет таким\r\n     *       answer: \"no answer\" // если не отправить будет таким\r\n     *       grade: 0 // 0..5, не обязателен\r\n     *       shots: 0 // не обязателен\r\n     *       rating: 0 // не обязателен\r\n     *       answerImg: \"url or base 64\" // не обязателен\r\n     *       questionImg: \"url or base 64\" // не обязателен\r\n     *       questionVideo: \"url or base 64\" // не обязателен\r\n     *       answerVideo: \"url or base 64\" // не обязателен\r\n     *       type: \"card\" // если не отправить будет таким\r\n     *       }\r\n     * */\r\n    createCard(data: CreateCards) {\r\n        return instance.post('cards/card', data)\r\n    },\r\n    /**\r\n     * Update Card\r\n     *  ?id=5eb6cb9a7a82672138e0d7c1\r\n     * */\r\n    deleteCard(config: string) {\r\n        return instance.delete('cards/card', {params: config})\r\n    },\r\n    /**\r\n     * Create Card\r\n     *  card: {\r\n     *      _id: \"5eb6a2f72f849402d46c6ac7\"\r\n     *      question: \"new question\" // не обязательно\r\n     *      ... // не обязательно\r\n     *      comments: \"new comments\" // не обязателен\r\n     *\r\n     *      }\r\n     * */\r\n    updateCard(data: UpdateCards) {\r\n        return instance.put('cards/card', data)\r\n    },\r\n}\r\n\r\n\r\n// Types cardsAPI\r\n/** Request Types */\r\n\r\nexport interface ConfigureFetchCardPacks {\r\n    packName: string // не обязательно\r\n    min: number // не обязательно\r\n    max: number // не обязательно\r\n    sortPacks: string // не обязательно\r\n    page: number // не обязательно\r\n    pageCount: number // не обязательно\r\n}\r\n\r\ninterface CreateCardPacks {\r\n    cardsPack: cardsPack\r\n}\r\n\r\nexport interface cardsPack {\r\n    name: string // если не отправить будет таким\r\n    path: string // если не отправить будет такой\r\n    grade: number // не обязателен\r\n    shots: number // не обязателен\r\n    rating: number // не обязателен\r\n    deckCover: string // не обязателен\r\n    private: boolean // если не отправить будет такой\r\n    type: string // если не отправить будет таким\r\n}\r\n\r\ninterface UpdateCardPacks {\r\n    cardsPack: UpdateCardsPack\r\n}\r\n\r\nexport interface UpdateCardsPack {\r\n    _id: string\r\n    name?: string\r\n}\r\n\r\ninterface FetchCardsConfig {\r\n    cardAnswer?: string\r\n    cardQuestion?: string\r\n    cardsPack_id: string\r\n    min?: number\r\n    max?: number\r\n    sortCards?: number\r\n    page?: number\r\n    pageCount?: number\r\n}\r\n\r\ninterface CreateCards {\r\n    card: {\r\n        cardsPack_id: string\r\n        question?: string // если не отправить будет таким\r\n        answer?: string // если не отправить будет таким\r\n        grade?: number // 0..5, не обязателен\r\n        shots?: number // не обязателен\r\n        rating?: number // не обязателен\r\n        answerImg?: string // не обязателен\r\n        questionImg?: string // не обязателен\r\n        questionVideo?: string // не обязателен\r\n        answerVideo?: string // не обязателен\r\n        type?: string // если не отправить будет таким\r\n    }\r\n}\r\n\r\ninterface UpdateCards {\r\n    card: {\r\n        _id: string\r\n        question?: string // не обязательно\r\n        comments?: string // не обязателен\r\n\r\n    }\r\n}\r\n\r\n/** Response Types */\r\n\r\ninterface FetchCardPacksType {\r\n    cardPacks: CardPacks []\r\n    cardPacksTotalCount: number // количество колод\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number // выбранная страница\r\n    pageCount: number // количество элементов на странице\r\n}\r\n\r\ninterface CardType {\r\n    answer: string\r\n    question: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    shots: number\r\n    user_id: string\r\n    created: string\r\n    updated: string\r\n    _id: string\r\n}\r\n\r\ninterface FetchCardType {\r\n    cards: CardType[]\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    packUserId: string\r\n}\r\n\r\nexport interface CardPacks {\r\n    _id: string\r\n    user_id: string\r\n    name: string\r\n    path: string // папка\r\n    cardsCount: number\r\n    grade: number // средняя оценка карточек\r\n    shots: number // количество попыток\r\n    rating: number // лайки\r\n    type: string // ещё будет \"folder\" (папка)\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n}\r\n","import {AuthMeResponseType} from '../dal/api';\r\nimport {setInitializeAppActionType} from './auth-reducer';\r\n\r\nconst initState = {\r\n    meObject: {} as AuthMeResponseType,\r\n}\r\n\r\nexport const appReducer = (state: InitialStateLoading = initState, action: AppReducerActionType): InitialStateLoading => {\r\n    switch (action.type) {\r\n        case 'APP/USER-DATA':\r\n            return {...state, meObject: action.userData}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUserDataAC = (userData: AuthMeResponseType) => ({\r\n    type: 'APP/USER-DATA', userData\r\n} as const)\r\n//thunks\r\n// export const setUserDataTC = (): AppThunk => (dispatch) => {\r\n//     authAPI.me()\r\n//         .then((res: AxiosResponse<AuthMeResponseType>) => {\r\n//             dispatch(setUserDataAC(res.data))\r\n//             dispatch(setIsLoggedAC(true))\r\n//         })\r\n//         .catch((error: AxiosError) => {\r\n//             console.log('Error', error)\r\n//         })\r\n// }\r\n\r\n//type\r\nexport type InitialStateLoading = typeof initState\r\nexport type SetUserActionType = ReturnType<typeof setUserDataAC>\r\nexport type AppReducerActionType = SetUserActionType | setInitializeAppActionType\r\n","import {authAPI, AuthMeResponseType, LoginParamsType} from '../dal/api';\r\nimport {SetUserActionType, setUserDataAC} from './app-reducer';\r\nimport {AppThunk} from './store';\r\nimport {AxiosError, AxiosResponse} from 'axios';\r\n\r\nconst initState = {\r\n    isLoggedIn: false,\r\n    isInitialized: false,\r\n    error: '' as string | null\r\n}\r\n\r\nexport const authReducer = (state: InitialStateLoading = initState, action: AuthActionType): InitialStateLoading => {\r\n    switch (action.type) {\r\n        case 'login/SET-IS-LOGGED-IN':\r\n            return {...state, isLoggedIn: action.isLoggedIn}\r\n        case 'APP/INITIALIZE-APP':\r\n            return {...state, isInitialized: action.isInitialized}\r\n        case 'APP/SET_AUTH_ERROR':\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setIsLoggedAC = (isLoggedIn: boolean) => ({type: 'login/SET-IS-LOGGED-IN', isLoggedIn} as const)\r\nexport const setInitializeAppAC = (isInitialized: boolean) => ({type: 'APP/INITIALIZE-APP', isInitialized} as const)\r\nexport const setAuthError = (error: string | null) => ({type: 'APP/SET_AUTH_ERROR', error} as const)\r\n\r\n// Thunks\r\nexport const setIsLoggedTC = (data: LoginParamsType): AppThunk => (dispatch) => {\r\n    authAPI.login(data)\r\n        .then(res => {\r\n            dispatch(setIsLoggedAC(true))\r\n        })\r\n}\r\nexport const logoutTC = (): AppThunk => (dispatch) => {\r\n    authAPI.logout()\r\n        .then(res => {\r\n            dispatch(setIsLoggedAC(false))\r\n        })\r\n}\r\nexport const initializeTC = (): AppThunk => (dispatch) => {\r\n    authAPI.me()\r\n        .then((res: AxiosResponse<AuthMeResponseType>) => {\r\n            dispatch(setInitializeAppAC(true))\r\n            dispatch(setIsLoggedAC(true))\r\n            dispatch(setUserDataAC(res.data))\r\n            if (res.data.error) {\r\n                setAuthError(res.data.error)\r\n            } else {\r\n                setAuthError(null)\r\n            }\r\n        })\r\n        .catch((error: AxiosError<{ error: string }>) => {\r\n            dispatch(setInitializeAppAC(true))\r\n            if (error.response) {\r\n                setAuthError(error.response.data.error)\r\n            } else {\r\n                setAuthError(null)\r\n            }\r\n        })\r\n}\r\n//type\r\nexport type InitialStateLoading = typeof initState\r\nexport type setInitializeAppActionType = ReturnType<typeof setInitializeAppAC>\r\nexport type setIsLoggedActionType = ReturnType<typeof setIsLoggedAC>\r\nexport type setAuthErrorActionType = ReturnType<typeof setAuthError>\r\nexport type AuthActionType =\r\n    | SetUserActionType\r\n    | setInitializeAppActionType\r\n    | setIsLoggedActionType\r\n    | setAuthErrorActionType\r\n\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {logoutTC} from '../bll/auth-reducer';\r\nimport {AppStateType} from '../bll/store';\r\nimport {Button, Size, Palette} from '../components/common/c2-SuperButton/Button';\r\nimport {PATH} from '../Routes';\r\n\r\nexport const Profile = () => {\r\n    const isLoggedIn = useSelector<AppStateType, boolean>(state => state.auth.isLoggedIn)\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logoutTC())\r\n    }\r\n\r\n    if(!isLoggedIn) {\r\n        return <Redirect to={PATH.LOGIN} />\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Profile</h1>\r\n            {isLoggedIn &&\r\n            <Button onClick={logoutHandler} size={Size.medium} palette={Palette.primary} title=\"Log out\"/>}\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react'\r\nimport s from './Error404.module.css'\r\n\r\nfunction Error404() {\r\n    const eyeRit = `${s.eye} ${s.eyeR}`\r\n    const blodAll = `${s.blod} ${s.blod2}`\r\n    return (\r\n        <div className={s.container}>\r\n\r\n            <div className={s.error}>\r\n                <p className={s.p}>4</p>\r\n                <span className={s.dracula}>\r\n\t\t\t<div className={s.con}>\r\n\t\t\t\t<div className={s.hair}/>\r\n\t\t\t\t<div className={s.hairR}/>\r\n\t\t\t\t<div className={s.head}/>\r\n    \t\t<div className={s.eye}/>\r\n    \t\t<div className={eyeRit}/>\r\n  \t\t\t<div className={s.mouth}/>\r\n  \t\t\t<div className={s.blod}/>\r\n  \t\t\t<div className={blodAll}/>\r\n\t\t\t</div>\r\n\t\t</span>\r\n                <p className={s.p}>4</p>\r\n\r\n                <div className={s.pageMs}>\r\n                    <p className={s.pageMsg}> Oops, the page you're looking for Disappeared </p>\r\n                    {/*<button className={s.goBack} >Go Back</button>*/}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from \"react\";\r\nimport s from \"./Logo.module.scss\";\r\n\r\n\r\nexport const Logo = () => {\r\n    return (<h1 className={s.logo}>it-incubator</h1>\r\n    );\r\n};\r\n\r\nexport default Logo;","import React from \"react\";\r\nimport s from \"./Title.module.scss\";\r\n\r\n\r\nexport const Title = (props: any) => {\r\n    return (<h2 className={s.title}>{props.title}</h2>\r\n    );\r\n};\r\n\r\nexport default Title;","import React, {DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\nimport {FieldConfig, useField} from 'formik';\r\n\r\nexport const Checkbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type,\r\n        onChange,\r\n        className,\r\n        children,\r\n        title,\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    const [field, meta] = useField({...restProps, type: 'checkbox'});\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label style={{position: 'relative'}}>\r\n            <input\r\n                type={'checkbox'}\r\n                className={finalInputClassName}\r\n                {...field}\r\n                {...restProps}\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n            {children ? title : children}\r\n\r\n            <div style={{color: 'red', position: 'absolute', top: '30px'}}>\r\n                {meta.touched && meta.error ? (<div className=\"error\">{meta.error}</div>) : null}\r\n            </div>\r\n        </label>\r\n    )\r\n}\r\n//types\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & FieldConfig\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './Input.module.scss'\r\nimport {FieldConfig, useField} from 'formik';\r\n\r\n\r\nexport const Input2: React.FC<SuperInputTextPropsType> = props => {\r\n    const {title, type, ...rest} = props\r\n\r\n    const [visibleEye, setVisibleEye] = React.useState(false)\r\n\r\n    const [field, meta] = useField({...rest, type: 'password'});\r\n    return (\r\n        <div className={s.group}>\r\n            <input\r\n                required\r\n                type={visibleEye ? 'text' : type}\r\n                className={s.input}\r\n                {...field}\r\n                {...rest}\r\n            />\r\n            <a className={`${s.passwordControl} ${visibleEye ? s.showPassword : s.hidePassword}`}\r\n               style={type === 'password' ? {display: 'inline'} : {display: 'none'}}\r\n               onClick={() => setVisibleEye(prev => !prev)}\r\n            >\r\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <line x1=\"40\" y1=\"30\" x2=\"240\" y2=\"100\"/>\r\n                    <path fillRule=\"evenodd\" clipRule=\"evenodd\"\r\n                          d=\"M12 4.5C7 4.5 2.73 7.61 1 12C2.73 16.39 7 19.5 12 19.5C17 19.5 21.27 16.39 23 12C21.27 7.61 17 4.5 12 4.5ZM12 17C9.23997 17 6.99997 14.76 6.99997 12C6.99997 9.24 9.23997 6.99999 12 6.99999C14.76 6.99999 17 9.24 17 12C17 14.76 14.76 17 12 17ZM12 9C10.34 9 8.99997 10.34 8.99997 12C8.99997 13.66 10.34 15 12 15C13.66 15 15 13.66 15 12C15 10.34 13.66 9 12 9Z\"\r\n                          fill=\"#2D2E46\"/>\r\n                </svg>\r\n            </a>\r\n            <span className={s.highlight}/>\r\n            <span className={s.bar}/>\r\n            <label className={s.label}>{title}</label>\r\n\r\n            <div style={{color: 'red', position: 'absolute', top: '50px'}}>\r\n                {meta.touched && meta.error ? (<div className=\"error\">{meta.error}</div>) : null}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Types\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype SuperInputTextPropsType = DefaultInputPropsType & FieldConfig\r\n\r\n","import React from 'react';\r\nimport s from './AuthRegistr.module.scss';\r\nimport './../../../src/styles/vars.scss';\r\nimport {Form, Formik} from 'formik';\r\nimport {initialValuesType} from './RegistrationContainer';\r\nimport Logo from '../../components/common/logo/Logo';\r\nimport Title from '../../components/common/title/Title';\r\nimport {Button, Size, Palette} from '../../components/common/c2-SuperButton/Button';\r\nimport {Checkbox} from '../../components/common/c3-SuperCheckbox/Checkbox';\r\nimport * as yup from 'yup';\r\nimport {Input2} from '../../components/common/c1-SuperInputText/Input2';\r\n\r\nconst validationSchema = yup.object().shape({\r\n    email: yup.string()\r\n        .email('Email is invalid')\r\n        .required('Email is required'),\r\n    password: yup.string()\r\n        .min(8, 'Password must be at least 8 characters')\r\n        .required('Password is required'),\r\n    confirmPassword: yup.string()\r\n        .oneOf([yup.ref('password'), null], 'Passwords must match')\r\n        .required('Confirm Password is required'),\r\n    acceptTerms: yup.bool()\r\n        .oneOf([true], 'Accept Ts & Cs is required')\r\n})\r\n\r\nexport type PropsType = {\r\n    initialValues: initialValuesType\r\n    onSubmit: (values: initialValuesType) => void\r\n}\r\n\r\nexport const Registration: React.FC<PropsType> = React.memo(props => {\r\n    const {\r\n        initialValues,\r\n        onSubmit,\r\n    } = props\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={onSubmit}\r\n            validationSchema={validationSchema}\r\n        >\r\n            <div className={s.form}>\r\n                <div className={s.containerForm}>\r\n                    <div className={s.formWrapper}>\r\n                        <Logo/>\r\n                        <Title title=\"Sign In\"/>\r\n                        <Form>\r\n                            <Input2\r\n                                title=\"Email\"\r\n                                name=\"email\"\r\n                            />\r\n                            <Input2\r\n                                type=\"password\"\r\n                                title=\"Password\"\r\n                                name=\"password\"\r\n                            />\r\n                            <Input2\r\n                                type=\"password\"\r\n                                title=\"Confirm password\"\r\n                                name=\"confirmPassword\"\r\n                            />\r\n\r\n                            <Checkbox\r\n                                type={'checkbox'}\r\n                                name={'acceptTerms'}\r\n                            >\r\n                                Accept Terms & Conditions\r\n                                </Checkbox>\r\n\r\n                            <div className={s.btnInner}>\r\n                                <Button size={Size.small} palette={Palette.default} title=\"Cancel\"/>\r\n                                <Button size={Size.medium} palette={Palette.primary} title=\"Register\"/>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Formik>\r\n    );\r\n});\r\n\r\n","import {useDispatch} from 'react-redux';\r\nimport {isRegistrationTC} from '../../bll/RegistrationReducer';\r\nimport {Registration} from './Registration';\r\nimport React from 'react';\r\n\r\n\r\nexport type initialValuesType = {\r\n    email: string\r\n    password: string\r\n    confirmPassword?: string\r\n    acceptTerms?: string\r\n}\r\n\r\nexport const RegistrationContainer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const initialValues: initialValuesType = {\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        acceptTerms: ''\r\n    }\r\n\r\n    const onSubmit = React.useCallback((values: initialValuesType) => {\r\n        dispatch(isRegistrationTC(values))\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            <Registration\r\n                initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n            />\r\n        </>\r\n    );\r\n};\r\n","import {Dispatch} from 'redux';\r\nimport {authAPI, RegistrationParamsType} from '../dal/api';\r\n\r\nconst initState = {\r\n    isRegistration: true\r\n}\r\n\r\nexport const registrationReducer = (state: InitialStateLoading = initState, action: ActionType): InitialStateLoading => {\r\n    switch (action.type) {\r\n        case 'login/registration': {\r\n            return {...state, isRegistration: action.isRegistration}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// AC\r\nexport const isRegistrationAC = (isRegistration: boolean) => ({\r\n    type: 'login/registration', isRegistration\r\n} as const)\r\n\r\n// Thunk\r\nexport const isRegistrationTC = (data: RegistrationParamsType) => (dispatch: Dispatch) => {\r\n    authAPI.register(data)\r\n        .then(() => {\r\n            dispatch(isRegistrationAC(true))\r\n        })\r\n}\r\n\r\n//type\r\nexport type InitialStateLoading = typeof initState\r\ntype ActionType = ReturnType<typeof isRegistrationAC>\r\n","export default __webpack_public_path__ + \"static/media/loading.2d4beb4f.svg\";","import React from 'react';\r\nimport loadingImg from '../../../assets/img/loading/loading.svg'\r\nimport s from './Loading.module.scss'\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className={s.wrapperLoading}>\r\n            <img src={loadingImg}/>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './Input.module.scss'\r\nimport {FieldConfig, useField} from 'formik';\r\n\r\n\r\nexport const InputFormik: React.FC<SuperInputTextPropsType> = ({title, ...props}) => {\r\n\r\n    const [visibleEye, setVisibleEye] = React.useState(false)\r\n\r\n    const [field, meta] = useField({...props, type: 'password'});\r\n    return (\r\n        <div className={s.group}>\r\n            <input\r\n                required\r\n                type={visibleEye ? 'text' : 'password'}\r\n                {...field}\r\n                className={s.input}\r\n                {...props}\r\n            />\r\n            <a className={`${s.passwordControl} ${visibleEye ? s.showPassword : s.hidePassword}`}\r\n               style={props.name === 'password' || 'confirmPassword' ? {display: 'inline'} : {display: 'none'}}\r\n               onClick={() => setVisibleEye((value) => !value)}\r\n            >\r\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <line x1=\"40\" y1=\"30\" x2=\"240\" y2=\"100\"/>\r\n                    <path fillRule=\"evenodd\" clipRule=\"evenodd\"\r\n                          d=\"M12 4.5C7 4.5 2.73 7.61 1 12C2.73 16.39 7 19.5 12 19.5C17 19.5 21.27 16.39 23 12C21.27 7.61 17 4.5 12 4.5ZM12 17C9.23997 17 6.99997 14.76 6.99997 12C6.99997 9.24 9.23997 6.99999 12 6.99999C14.76 6.99999 17 9.24 17 12C17 14.76 14.76 17 12 17ZM12 9C10.34 9 8.99997 10.34 8.99997 12C8.99997 13.66 10.34 15 12 15C13.66 15 15 13.66 15 12C15 10.34 13.66 9 12 9Z\"\r\n                          fill=\"#2D2E46\"/>\r\n                </svg>\r\n            </a>\r\n            <span className={s.highlight}/>\r\n            <span className={s.bar}/>\r\n            <label className={s.label}>{title}</label>\r\n\r\n            <div style={{color: 'red', position: 'absolute', top: '50px'}}>\r\n                {meta.touched && meta.error ? (<div className=\"error\">{meta.error}</div>) : null}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Types\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype SuperInputTextPropsType = DefaultInputPropsType & FieldConfig\r\n\r\n","import React from 'react';\r\nimport s from './NewPassword.module.scss';\r\nimport {Form, Formik} from 'formik';\r\nimport {initialValuesType} from './NewPasswordContainer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PATH} from '../../../Routes';\r\nimport {Loading} from '../../../components/common/loading/Loading';\r\nimport {Button, Size, Palette} from '../../../components/common/c2-SuperButton/Button';\r\nimport {InputFormik} from '../../../components/common/inputFormik/InputFormik';\r\n\r\n\r\nexport type PropsType = {\r\n    initialValues: initialValuesType\r\n    onSubmit: (values: initialValuesType) => void\r\n    disable: boolean\r\n    loading: boolean\r\n    validationSchema: any\r\n    toLoginPage: boolean\r\n}\r\n\r\nexport const NewPassword: React.FC<PropsType> = React.memo(props => {\r\n\r\n    const {initialValues, onSubmit, disable, loading, validationSchema, toLoginPage} = props\r\n\r\n    if (toLoginPage) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={onSubmit}\r\n            validationSchema={validationSchema}\r\n        >\r\n            <div className={s.form}>\r\n\r\n                {loading && <Loading/>}\r\n\r\n                <div className={s.containerForm}>\r\n                    <div className={s.formWrapper}>\r\n                        <h2 className={s.formTitle}>It-incubator </h2>\r\n                        <span className={s.formSubTitle}>Create new password</span>\r\n                        <Form className={s.formLogin}>\r\n                            <InputFormik\r\n                                title=\"Password\"\r\n                                name=\"password\"\r\n                            />\r\n                            <p className={s.textNewPassword}>Create new password and we will send you further\r\n                                instructions\r\n                                to email</p>\r\n                            <div className={s.buttonInner}>\r\n                                <Button size={Size.big} palette={Palette.primary} title=\"Create new password\"\r\n                                        disabled={disable}/>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Formik>\r\n\r\n    );\r\n});","import {authAPI, ForgotParamsType, SetNewPasswordParamsType} from '../dal/api';\r\nimport {AppThunk} from './store';\r\n\r\nconst initState = {\r\n    toCheckEmailPage: false,\r\n    setMailName: '',\r\n    toLoginPage: false,\r\n    buttonDisable: false,\r\n    loading: false\r\n}\r\n\r\nexport const passwordRecoveryReducer = (state: InitialStateLoading = initState, action: ForgotActionType): InitialStateLoading => {\r\n    switch (action.type) {\r\n        case 'RECOVERY/CHECK-MAIL-PAGE':\r\n            return {...state, toCheckEmailPage: action.toCheckEmailPage}\r\n        case 'RECOVERY/SET-MAIL-NAME':\r\n            return {...state, setMailName: action.setMailName}\r\n        case 'RECOVERY/LOGIN-PAGE':\r\n            return {...state, toLoginPage: action.toLoginPage}\r\n        case 'RECOVERY/BUTTON-DISABLE':\r\n            return {...state, buttonDisable: action.disable}\r\n        case 'RECOVERY/LOADING-SHOW':\r\n            return {...state, loading: action.loading}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//action\r\nconst toCheckEmailPageAC = (toCheckEmailPage: boolean) => ({\r\n    type: 'RECOVERY/CHECK-MAIL-PAGE', toCheckEmailPage: toCheckEmailPage\r\n} as const)\r\nconst getMailNameAC = (setMailName: string) => ({type: 'RECOVERY/SET-MAIL-NAME', setMailName} as const)\r\nconst toLoginPageAC = (toLoginPage: boolean) => ({type: 'RECOVERY/LOGIN-PAGE', toLoginPage} as const)\r\nexport const disableButtonAC = (disable: boolean) => ({type: 'RECOVERY/BUTTON-DISABLE', disable} as const)\r\nexport const showLoadingAC = (loading: boolean) => ({type: 'RECOVERY/LOADING-SHOW', loading} as const)\r\n//thunks\r\nexport const setMailTC = (data: ForgotParamsType): AppThunk => (dispatch) => {\r\n    dispatch(disableButtonAC(true))\r\n    dispatch(showLoadingAC(true))\r\n    authAPI.recovery(data)\r\n        .then(res => {\r\n            dispatch(toCheckEmailPageAC(true))\r\n            dispatch(getMailNameAC(data.email))\r\n            console.log(res.data.info)\r\n        })\r\n        .catch(rej => {\r\n            console.log(rej.response.data.error)\r\n        })\r\n        .finally(() => {\r\n                dispatch(disableButtonAC(false))\r\n                dispatch(showLoadingAC(false))\r\n            }\r\n        )\r\n}\r\nexport const setNewPasswordTC = (data: SetNewPasswordParamsType): AppThunk => (dispatch) => {\r\n    dispatch(disableButtonAC(true))\r\n    dispatch(showLoadingAC(true))\r\n    authAPI.setNewPassword(data)\r\n        .then(res => {\r\n            dispatch(toLoginPageAC(true))\r\n            console.log(res.data.info)\r\n        })\r\n        .catch(rej => {\r\n            console.log(rej.response.data.error)\r\n        })\r\n        .finally(() => {\r\n            dispatch(disableButtonAC(false))\r\n            dispatch(showLoadingAC(false))\r\n        })\r\n}\r\n//type\r\nexport type InitialStateLoading = typeof initState\r\nexport type setMailActionType = ReturnType<typeof toCheckEmailPageAC>\r\nexport type mailActionType = ReturnType<typeof getMailNameAC>\r\nexport type toLoginPageActionType = ReturnType<typeof toLoginPageAC>\r\nexport type buttonDisableActionType = ReturnType<typeof disableButtonAC>\r\nexport type showLoadingActionType = ReturnType<typeof showLoadingAC>\r\nexport type ForgotActionType = setMailActionType | mailActionType | toLoginPageActionType | buttonDisableActionType |\r\n    showLoadingActionType\r\n","import React from 'react';\r\nimport {NewPassword} from './NewPassword';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useParams} from 'react-router-dom';\r\nimport {setNewPasswordTC} from '../../../bll/PasswordRecoveryReducer';\r\nimport {AppStateType} from '../../../bll/store';\r\nimport * as yup from 'yup';\r\n\r\n\r\nexport const ForgotNewPasswordContainer = () => {\r\n    const disable = useSelector<AppStateType, boolean>(state => state.recovery.buttonDisable)\r\n    const loading = useSelector<AppStateType, boolean>(state => state.recovery.loading)\r\n    const toLoginPage = useSelector<AppStateType, boolean>(state => state.recovery.toLoginPage)\r\n    const {token} = useParams<{ token: string }>()\r\n    const dispatch = useDispatch()\r\n\r\n    const initialValues: initialValuesType = {\r\n        password: '',\r\n        resetPasswordToken: token\r\n    }\r\n\r\n    const onSubmit = React.useCallback((values: initialValuesType) => {\r\n        // alert(JSON.stringify(values))\r\n        dispatch(setNewPasswordTC(values))\r\n    }, [dispatch])\r\n\r\n    const validationSchema = yup.object().shape({\r\n        password: yup.string()\r\n            .min(8, 'Password must be at least 8 characters')\r\n            .required('Password is required'),\r\n    })\r\n    return (\r\n        <>\r\n            <NewPassword\r\n                initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n                disable={disable}\r\n                loading={loading}\r\n                validationSchema={validationSchema}\r\n                toLoginPage={toLoginPage}\r\n            />\r\n\r\n        </>\r\n    );\r\n};\r\n//types\r\nexport type initialValuesType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/mail.bc3a4042.svg\";","import React from 'react';\r\nimport s from './CheckEmail.module.scss';\r\nimport mail from '../../../assets/img/authForgotPasswordCheckEmail/mail.svg'\r\nimport {useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../bll/store';\r\n\r\n\r\nexport const CheckEmail = React.memo(() => {\r\n    const mailName = useSelector<AppStateType, string>(state => state.recovery.setMailName)\r\n\r\n    return (\r\n        <div className={s.form}>\r\n            <div className={s.containerForm}>\r\n                <div className={s.formWrapper}>\r\n                    <h2 className={s.formTitle}>It-incubator</h2>\r\n                    <img className={s.imgMail} src={mail} alt=\"mail\"/>\r\n                    <span className={s.formSubTitle}>Check Email</span>\r\n                    <p className={s.textCheckEmail}>We’ve sent an Email with instructions to {mailName}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\n","import React from 'react';\r\nimport s from './EnterEmail.module.scss';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport {PATH} from '../../../Routes';\r\nimport {Form, Formik} from 'formik';\r\nimport {initialValuesType} from './EnterEmailContainer';\r\nimport {Loading} from '../../../components/common/loading/Loading';\r\nimport {Button, Size, Palette} from '../../../components/common/c2-SuperButton/Button';\r\nimport {InputFormik} from '../../../components/common/inputFormik/InputFormik';\r\n\r\n\r\nexport type PropsType = {\r\n    initialValues: initialValuesType\r\n    onSubmit: (values: initialValuesType) => void\r\n    isMail: boolean\r\n    disable: boolean\r\n    loading: boolean\r\n    validationSchema: any\r\n}\r\n\r\nexport const EnterEmail: React.FC<PropsType> = React.memo(props => {\r\n\r\n    const {initialValues, onSubmit, isMail, disable, loading, validationSchema} = props\r\n\r\n    if (isMail) {\r\n        return <Redirect to={PATH.FORGOT_EMAIL}/>\r\n    }\r\n    return (\r\n        <Formik initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n                validationSchema={validationSchema}\r\n        >\r\n            <div className={s.form}>\r\n\r\n                {loading && <Loading/>}\r\n\r\n                <div className={s.containerForm}>\r\n                    <div className={s.formWrapper}>\r\n                        <h2 className={s.formTitle}>It-incubator </h2>\r\n                        <span className={s.formSubTitle}>Forgot your password?</span>\r\n                        <Form className={s.formEmail}>\r\n\r\n                            <InputFormik\r\n                                type=\"email\"\r\n                                title=\"Email\"\r\n                                name=\"email\"\r\n                            />\r\n\r\n                            <p className={s.textEmail}>Enter your email address and we will send you further\r\n                                instructions </p>\r\n                            <div className={s.buttonInner}>\r\n                                <Button size={Size.big} palette={Palette.primary} title=\"Send Instructions\"\r\n                                        disabled={disable}/>\r\n                            </div>\r\n\r\n                        </Form>\r\n\r\n                        <div className={s.blockSingUp}>\r\n                            <span className={s.formText}>Did you remember your password?</span>\r\n                            <NavLink to={PATH.LOGIN} className={s.linkSingUp}>Try logging in</NavLink>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Formik>\r\n    );\r\n});\r\n\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../bll/store';\r\nimport {EnterEmail} from './EnterEmail';\r\nimport {setMailTC} from '../../../bll/PasswordRecoveryReducer';\r\nimport * as yup from 'yup';\r\nimport {emailMessage, sendMessageMethod} from '../../../config';\r\n\r\n\r\nexport const EnterEmailContainer = () => {\r\n    const isMail = useSelector<AppStateType, boolean>(state => state.recovery.toCheckEmailPage)\r\n    const disable = useSelector<AppStateType, boolean>(state => state.recovery.buttonDisable)\r\n    const loading = useSelector<AppStateType, boolean>(state => state.recovery.loading)\r\n    const dispatch = useDispatch()\r\n\r\n    const initialValues: initialValuesType = {\r\n        email: '',\r\n        from: '',\r\n        message: sendMessageMethod\r\n    }\r\n    const validationSchema = yup.object().shape({\r\n        email: yup.string()\r\n            .email('Email is invalid')\r\n            .required('Email is required'),\r\n    })\r\n    const onSubmit = React.useCallback((values: initialValuesType) => {\r\n        // alert(JSON.stringify(values))\r\n        dispatch(setMailTC(values))\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            <EnterEmail\r\n                initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n                isMail={isMail}\r\n                disable={disable}\r\n                loading={loading}\r\n                validationSchema={validationSchema}\r\n            />\r\n\r\n        </>\r\n    );\r\n};\r\n//types\r\nexport type initialValuesType =\r\n    {\r\n        email: string,\r\n        from: any,\r\n        message: string\r\n    }\r\n\r\n","/**\r\n * Dev version true/false\r\n * */\r\nexport const DEV_VERSION = false\r\n\r\nexport const emailMessage: string = `<div style=\"background-color: lime; padding: 15px\">\r\n                                        <p>Восстановления пароля.Нажмите на ссылку:</p>\r\n                                        <a href='https://marmon179.github.io/project/#/set-new-password/$token$'>link</a>\r\n                                    </div>`\r\n\r\nexport const sendMessageMethod =  DEV_VERSION ? '' : emailMessage","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './Input.module.scss'\r\nimport {FieldConfig} from 'formik';\r\n\r\n\r\nexport const Input: React.FC<SuperInputTextPropsType> = props => {\r\n    const {\r\n        type, onChange, onChangeText, onKeyPress, onEnter, error, className,\r\n        spanClassName, title, ...restProps\r\n    } = props\r\n\r\n    const [visibleEye, setVisibleEye] = React.useState(false)\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n    }\r\n\r\n    return (\r\n        <div className={s.group}>\r\n            <input\r\n                required\r\n                type={visibleEye ? 'text' : type}\r\n\r\n                onChange={onChangeCallback}\r\n                className={s.input}\r\n                {...restProps}\r\n            />\r\n            <a className={`${s.passwordControl} ${visibleEye ? s.showPassword : s.hidePassword}`}\r\n               style={type === 'password' ? {display: 'inline'} : {display: 'none'}}\r\n               onClick={() => setVisibleEye((value) => !value)}\r\n            >\r\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <line x1=\"40\" y1=\"30\" x2=\"240\" y2=\"100\"/>\r\n                    <path fillRule=\"evenodd\" clipRule=\"evenodd\"\r\n                          d=\"M12 4.5C7 4.5 2.73 7.61 1 12C2.73 16.39 7 19.5 12 19.5C17 19.5 21.27 16.39 23 12C21.27 7.61 17 4.5 12 4.5ZM12 17C9.23997 17 6.99997 14.76 6.99997 12C6.99997 9.24 9.23997 6.99999 12 6.99999C14.76 6.99999 17 9.24 17 12C17 14.76 14.76 17 12 17ZM12 9C10.34 9 8.99997 10.34 8.99997 12C8.99997 13.66 10.34 15 12 15C13.66 15 15 13.66 15 12C15 10.34 13.66 9 12 9Z\"\r\n                          fill=\"#2D2E46\"/>\r\n                </svg>\r\n            </a>\r\n            <span className={s.highlight}/>\r\n            <span className={s.bar}/>\r\n            <label className={s.label}>{title}</label>\r\n\r\n            <div style={{color: 'red', position: 'absolute', top: '50px'}}>\r\n                {error}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Types\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void  // Not used\r\n    onEnter?: () => void // Not used\r\n    error?: string | null // Not used\r\n    spanClassName?: string // Not used\r\n} & FieldConfig<any>\r\n\r\nexport default Input;","import React from 'react';\r\nimport s from './AuthLogin.module.scss';\r\nimport {useFormik} from 'formik';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport {PATH} from '../../Routes';\r\nimport Logo from \"../../components/common/logo/Logo\";\r\nimport Title from \"../../components/common/title/Title\";\r\nimport {Input} from \"../../components/common/c1-SuperInputText/Input\";\r\nimport {FormikErrorType, initialValuesType} from \"./AuthLoginContainer\";\r\nimport {Button, Palette, Size} from \"../../components/common/c2-SuperButton/Button\";\r\n\r\n\r\nexport type PropsType = {\r\n    initialValues: initialValuesType\r\n    onSubmit: (values: initialValuesType) => void\r\n    validate: (values: initialValuesType) => FormikErrorType\r\n    isLoggedIn: boolean\r\n}\r\n\r\nexport const AuthLogin = (props: PropsType) => {\r\n\r\n    const {\r\n        initialValues,\r\n        onSubmit,\r\n        validate\r\n    } = props\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        // validate\r\n    });\r\n\r\n    if(props.isLoggedIn) {\r\n       return <Redirect to={PATH.PROFILE} />\r\n    }\r\n\r\n    return (\r\n        <div className={s.form}>\r\n            <div className={s.containerForm}>\r\n                <div className={s.formWrapper}>\r\n\r\n                    <Logo/>\r\n                    <Title title=\"Sign In\"/>\r\n\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        {/*<InputEmail values={formik.values.email} onChange={formik.handleChange}/>*/}\r\n                        {/*<InputPassword title=\"Password\" onChange={formik.handleChange} values={formik.values.password}/>*/}\r\n\r\n                        <Input\r\n                            type={'text'}\r\n                            title={'Email'}\r\n                            error={(formik.touched.email && formik.errors.email) ? formik.errors.email : null}\r\n                            {...formik.getFieldProps('email')}\r\n                        />\r\n\r\n                        <Input\r\n                            type={'password'}\r\n                            title={'Password'}\r\n                            error={(formik.touched.password && formik.errors.password) ? formik.errors.password : null}\r\n                            {...formik.getFieldProps('password')}\r\n                        />\r\n\r\n                        <NavLink to={PATH.RECOVERY_PASSWORD} className={s.linkForgotPassword}>Forgot password</NavLink>\r\n                        <div className={s.buttonInner}>\r\n                            <Button size={Size.big} palette={Palette.primary} title=\"Login\" />\r\n                        </div>\r\n                    </form>\r\n\r\n                    <div className={s.blockSingUp}>\r\n                        <span className={s.formText}>Don’t have an account?</span>\r\n                        <NavLink to={PATH.REGISTRATION} className={s.linkSingUp}>Sign Up </NavLink>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AuthLogin;","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {setIsLoggedTC} from '../../bll/auth-reducer';\r\nimport AuthLogin from './AuthLogin';\r\nimport {AppStateType} from '../../bll/store';\r\nimport {validatorsLogin} from '../../assets/Validators/validatorsLogin';\r\n\r\n\r\nexport type initialValuesType = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\nexport type FormikErrorType = {\r\n    email?: string\r\n}\r\n\r\nexport const AuthLoginContainer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const isLoggedIn = useSelector<AppStateType, boolean>(state => state.auth.isLoggedIn)\r\n\r\n    const initialValues: initialValuesType = {\r\n        email: '',\r\n        password: '',\r\n    }\r\n\r\n    const validate = (values: initialValuesType) => {\r\n        return validatorsLogin(values);\r\n    };\r\n\r\n    const onSubmit = (values: initialValuesType) => {\r\n        // alert(JSON.stringify(values))\r\n        dispatch(setIsLoggedTC(values))\r\n    }\r\n\r\n    return (\r\n        <AuthLogin\r\n            initialValues={initialValues}\r\n            validate={validate}\r\n            onSubmit={onSubmit}\r\n            isLoggedIn={isLoggedIn}\r\n        />\r\n    );\r\n};\r\n","import * as yup from 'yup';\r\n\r\nexport type FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    confirmPassword?: string\r\n    resetPasswordToken?: string\r\n}\r\n\r\nexport const validatorsLogin = (values: FormikErrorType) => {\r\n    const errors: FormikErrorType = {}\r\n    if (!values.email) {\r\n        errors.email = 'Required'\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = 'Invalid email address';\r\n    }\r\n    if (!values.password) {\r\n        errors.password = 'Required'\r\n    } else if (values.password.length < 8) {\r\n        errors.password = 'Password must be more than 8 characters long';\r\n    }\r\n    if (!values.confirmPassword) {\r\n        errors.confirmPassword = 'Required'\r\n    } else if (values.confirmPassword.length < 8) {\r\n        errors.confirmPassword = 'Password must be more than 8 characters long';\r\n    }\r\n    return errors;\r\n}\r\n\r\nexport let validationSchema = yup.object().shape({\r\n    email: yup.string()\r\n        .email('Email is invalid')\r\n        .required('Email is required'),\r\n    password: yup.string()\r\n        .min(8, 'Password must be at least 8 characters')\r\n        .required('Password is required'),\r\n    confirmPassword: yup.string()\r\n        .oneOf([yup.ref('password'), null], 'Passwords must match')\r\n        .required('Confirm Password is required'),\r\n    acceptTerms: yup.bool()\r\n        .oneOf([true], 'Accept Ts & Cs is required')\r\n})","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n\r\nexport const SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        onEnter\r\n        && e.key === 'Enter'\r\n        && onEnter()\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                {...restProps}\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n\r\n        </>\r\n    )\r\n}\r\n//types\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\n","import React, {useState} from 'react';\r\nimport {SuperInputText} from '../../../components/common/c1-SuperInputText/SuperInputText';\r\nimport style from './TestSuperInput.module.css'\r\n\r\nexport const TestSuperInput = () => {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'Введите текст'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.column}>\r\n            <SuperInputText\r\n                value={text}\r\n                onChangeText={setText}\r\n                onEnter={showAlert}\r\n                error={error}\r\n            />\r\n            <SuperInputText/>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\nexport const SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default}  ${className} `\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps}\r\n        />\r\n    )\r\n}\r\n//types\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\n","import React, {useState} from 'react';\r\nimport style from './TestSuperButton.module.css'\r\nimport {SuperButton} from '../../../components/common/c2-SuperButton/SuperButton';\r\n\r\nexport const TestSuperButton = () => {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'Введите текст'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.column}>\r\n            <SuperButton>\r\n                default\r\n            </SuperButton>\r\n\r\n            <SuperButton\r\n                red\r\n                onClick={showAlert}\r\n            >\r\n                delete\r\n            </SuperButton>\r\n\r\n            <SuperButton disabled>\r\n                disabled\r\n            </SuperButton>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n\r\nexport const SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps}\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label>\r\n    )\r\n}\r\n//types\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n","import React, {useState} from 'react';\r\nimport {SuperInputText} from '../../../components/common/c1-SuperInputText/SuperInputText';\r\nimport style from './TestSuperCheckbox.module.css'\r\nimport {SuperCheckbox} from '../../../components/common/c3-SuperCheckbox/SuperCheckbox';\r\n\r\nexport const TestSuperCheckbox = () => {\r\n\r\n    return (\r\n        <div className={style.column}>\r\n            <SuperCheckbox/>\r\n        </div>\r\n    );\r\n};\r\n\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport {SuperInputText} from '../c1-SuperInputText/SuperInputText'\r\nimport s from './SuperEditableSpan.module.css'\r\n\r\nexport const SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus,\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false)\r\n\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false)\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true)\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${s.span} ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n                        {...restProps}\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        ✎ {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n//types\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\ntype SuperEditableSpanType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    spanProps?: DefaultSpanPropsType\r\n}","import React, {useState} from 'react';\r\nimport style from './TestSuperEditableSpan.module.css'\r\nimport {restoreState, saveState} from './localStorage/localStorage';\r\nimport {SuperEditableSpan} from '../../../components/common/c4-SuperEditableSpan/SuperEditableSpan';\r\nimport {SuperButton} from '../../../components/common/c2-SuperButton/SuperButton';\r\n\r\nexport const TestSuperEditableSpan = () => {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n        setValue(restoreState<string>('editable-span-value', ''))\r\n    }\r\n\r\n    return (\r\n        <div className={style.column}>\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text...'}}\r\n                />\r\n            </div>\r\n            <div className={style.button}><SuperButton onClick={save}>save</SuperButton>\r\n                <SuperButton onClick={restore} red>restore</SuperButton></div>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\nimport s from './SuperSelect.module.scss'\r\n\r\n\r\nexport const SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options, className,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: any[] = options ? options.map((o, i) => (\r\n        <option className={s.option} key={o + '-' + i} value={o}>{o}</option>\r\n    )) : []; // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        // onChange, onChangeOption\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    const finalSelectClassName = s.select + (\r\n        className\r\n            ? '' + className\r\n            : ''\r\n    )\r\n\r\n    return (\r\n        <select className={finalSelectClassName} onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n//types\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n","import React, {useState} from 'react';\r\nimport {SuperSelect} from '../../../components/common/c5-SuperSelect/SuperSelect';\r\nimport style from './TestSuperSelect.module.css'\r\n\r\nconst arr = ['hello', 'bye', 'success']\r\n\r\nexport const TestSuperSelect = () => {\r\n    const [value, onChangeOption] = useState(arr[1])\r\n\r\n    return (\r\n        <div className={style.column}>\r\n            <SuperSelect\r\n                options={arr}\r\n                value={value}\r\n                onChangeOption={onChangeOption}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperRadio.module.css'\r\n\r\n\r\nexport const SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name, className,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => (\r\n        <div className={s.body}>\r\n            <label key={name + '-' + i} className={s.label}>\r\n                <input\r\n                    className={s.radio}\r\n                    type={'radio'}\r\n                    name={name}\r\n                    checked={o === value}\r\n                    value={o}\r\n                    onChange={onChangeCallback}\r\n                    {...restProps}\r\n                />\r\n                <div className={s.radDesign}/>\r\n                <div className={s.RadText}>{o}</div>\r\n            </label>\r\n        </div>\r\n    )) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n//types\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n","import React, {useState} from 'react';\r\nimport {SuperRadio} from '../../../components/common/c6-SuperRadio/SuperRadio';\r\nimport style from './TestSuperRadio.module.css'\r\n\r\nconst arr = ['hello', 'bye', 'success']\r\n\r\nexport const TestSuperRadio = () => {\r\n    const [value, onChangeOption] = useState(arr[1])\r\n\r\n    return (\r\n        <div className={style.column}>\r\n            <SuperRadio\r\n                name={'radio'}\r\n                options={arr}\r\n                value={value}\r\n                onChangeOption={onChangeOption}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react';\r\nimport s from './SuperRange.module.css';\r\n\r\n\r\nexport const SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeRange,\r\n        className,\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e);\r\n        onChangeRange && onChangeRange(+e.currentTarget.value);\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : ''}`;\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'range'}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n                {...restProps}\r\n            />\r\n\r\n        </>\r\n    );\r\n}\r\n//types\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\ntype SuperRangePropsType = DefaultInputPropsType & {\r\n    onChangeRange: (value: number) => void\r\n    value: number,\r\n};\r\n","import React, {useState} from 'react';\r\nimport {SuperRange} from '../../../components/common/c7-SuperRange/SuperRange';\r\nimport style from './TestSuperRange.module.css'\r\n\r\n\r\nexport const TestSuperRange = () => {\r\n    const [value, setValue] = useState<number>(10)\r\n\r\n    return (\r\n        <div className={style.column}>\r\n            <span>{value}</span>\r\n            <SuperRange\r\n                value={value}\r\n                onChangeRange={setValue}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './InputSearch.module.scss'\r\nimport {FieldConfig, useField} from 'formik';\r\n\r\n\r\nexport const InputSearch: React.FC<SuperInputTextPropsType> = ({title, ...props}) => {\r\n\r\n    const [field, meta] = useField({...props});\r\n    return (\r\n        <div className={s.group}>\r\n            <input\r\n                {...field}\r\n                className={s.input}\r\n                {...props}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n// Types\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype SuperInputTextPropsType = DefaultInputPropsType & FieldConfig\r\n\r\n","import {AppThunk} from './store';\r\nimport {CardPacks, cardsAPI, cardsPack, ConfigureFetchCardPacks, UpdateCardsPack} from '../dal/api';\r\n\r\nconst initState = {\r\n    search: '',\r\n    packName: '',\r\n    cardPacks: [] as CardPacks[],\r\n    cardPacksTotalCount: 1000,\r\n    pageSize: 9,\r\n    currentPage: 1,\r\n    modalWindow: false,\r\n    _id: ''\r\n\r\n\r\n}\r\n\r\nexport const SearchReducer = (state: InitialStateLoading = initState, action: SearchActionType): InitialStateLoading => {\r\n    switch (action.type) {\r\n        case 'SEARCH/DATE-SEARCH':\r\n            return {...state, packName: action.packName}\r\n        case 'SEARCH/SET_CURRENT_PAGE':\r\n            return {...state, currentPage: action.currentPage}\r\n        case 'SEARCH/SET_TOTAL_PACKS_COUNT':\r\n            return {...state, cardPacksTotalCount: action.cardPacksTotalCount}\r\n        case 'SEARCH/SET_CARD_PACKS':\r\n            return {...state, cardPacks: action.cardPacks}\r\n        case 'SEARCH/ADD_ID':\r\n            return {...state, _id: action.id}\r\n        case 'SEARCH/OPEN_MODAL_WINDOW':\r\n            return {...state, modalWindow: action.modalWindow}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//action\r\nexport const toGetDateAC = (packName: string) => ({type: 'SEARCH/DATE-SEARCH', packName} as const)\r\nexport const setCardPacks = (cardPacks: CardPacks[]) => ({type: 'SEARCH/SET_CARD_PACKS', cardPacks} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({type: 'SEARCH/SET_CURRENT_PAGE', currentPage} as const)\r\nexport const addId = (id: string) => ({type: 'SEARCH/ADD_ID', id} as const)\r\nexport const openModalWindow = (modalWindow: boolean) => ({type: 'SEARCH/OPEN_MODAL_WINDOW', modalWindow} as const)\r\nexport const setTotalPacksCount = (cardPacksTotalCount: number) => ({\r\n    type: 'SEARCH/SET_TOTAL_PACKS_COUNT',\r\n    cardPacksTotalCount\r\n} as const)\r\n\r\n//thunks\r\nexport const fetchPacks = (config?: Partial<ConfigureFetchCardPacks>): AppThunk => async dispatch => {\r\n    const res = await cardsAPI.fetchCardPacks(config)\r\n\r\n    dispatch(setCardPacks(res.data.cardPacks))\r\n    dispatch(setTotalPacksCount(res.data.cardPacksTotalCount))\r\n\r\n}\r\n\r\nexport const requestPacks = (page: number, pageCount: number): AppThunk => async dispatch => {\r\n    await cardsAPI.fetchCardPacks({page, pageCount})\r\n        .then(((res) => {\r\n            dispatch(setCardPacks(res.data.cardPacks))\r\n            dispatch(setCurrentPage(page))\r\n            dispatch(setTotalPacksCount(res.data.cardPacksTotalCount))\r\n        }))\r\n}\r\nexport const removePack = (id: string): AppThunk => async dispatch => {\r\n    await cardsAPI.deleteCardPacks(id)\r\n    dispatch(fetchPacks())\r\n}\r\n\r\nexport const searchPacks = (packName: string): AppThunk => async dispatch => {\r\n    await cardsAPI.fetchCardPacks({packName})\r\n        .then(((res) => {\r\n            dispatch(setCardPacks(res.data.cardPacks))\r\n        }))\r\n}\r\nexport const addCardsPacks = (date: cardsPack): AppThunk => async () => {\r\n    await cardsAPI.createCardPacks({cardsPack: date})\r\n}\r\nexport const editPack = (date: UpdateCardsPack): AppThunk => async dispatch => {\r\n    await cardsAPI.updateCardPacks({cardsPack: date})\r\n    dispatch(fetchPacks())\r\n}\r\n//type\r\nexport type InitialStateLoading = typeof initState\r\n\r\nexport type SearchActionType =\r\n    | ReturnType<typeof toGetDateAC>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setTotalPacksCount>\r\n    | ReturnType<typeof setCardPacks>\r\n    | ReturnType<typeof addId>\r\n    | ReturnType<typeof openModalWindow>\r\n\r\n\r\n","import React from 'react';\r\nimport {Form, Formik} from 'formik';\r\nimport {SuperInputText} from '../../../components/common/c1-SuperInputText/SuperInputText';\r\nimport {useDispatch} from 'react-redux';\r\nimport {InputSearch} from '../../../components/common/inputSearch/InputSearch';\r\nimport style from './TestInputSearch.module.css'\r\nimport {toGetDateAC} from '../../../bll/SearchReducer';\r\n\r\nexport const TestInputSearch = () => {\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <Formik\r\n            initialValues={{packName: ''}}\r\n            onSubmit={(values:any) => {\r\n                alert(JSON.stringify(values))\r\n                dispatch(toGetDateAC(values))\r\n            }}>\r\n            <Form className={style.column}>\r\n                <InputSearch type=\"text\" name=\"search\" placeholder=\"Search...\"/>\r\n            </Form>\r\n        </Formik>\r\n\r\n    );\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport style from './test.module.css'\r\nimport {TestSuperInput} from './testSuperInput/TestSuperInput';\r\nimport {TestSuperButton} from './testSuperButton/TestSuperButton';\r\nimport {TestSuperCheckbox} from './testSuperCheckbox/TestSuperCheckbox';\r\nimport {TestSuperEditableSpan} from './testSuperEditableSpan/TestSuperEditableSpan';\r\nimport {TestSuperSelect} from './testSuperSelect/TestSuperSelect';\r\nimport {TestSuperRadio} from './testSuperRadio/TestSuperRadio';\r\nimport {TestSuperRange} from './testSuperRange/TestSuperRange';\r\nimport {TestInputSearch} from './testInputSearch/TestSuperInput';\r\n\r\nexport const Test = () => {\r\n    return (\r\n        <div className={style.test}>\r\n            <span>\r\n                SuperInputText\r\n            </span>\r\n            <div>\r\n                <TestSuperInput/>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <hr/>\r\n            <span>\r\n                SuperButton\r\n            </span>\r\n            <div>\r\n                <TestSuperButton/>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <hr/>\r\n            <span>\r\n                SuperRadio\r\n            </span>\r\n            <div>\r\n                <TestSuperRadio/>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <hr/>\r\n            <span>\r\n                SuperEditableSpan\r\n            </span>\r\n            <div>\r\n                <TestSuperEditableSpan/>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <hr/>\r\n            <span>\r\n                SuperSelect\r\n            </span>\r\n            <div>\r\n                <TestSuperSelect/>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <hr/>\r\n            <span>\r\n                SuperCheckbox\r\n            </span>\r\n            <div>\r\n                <TestSuperCheckbox/>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <hr/>\r\n            <span>\r\n                SuperRange\r\n            </span>\r\n            <div>\r\n                <TestSuperRange/>\r\n            </div>\r\n            {/*----------------------------------------------------*/}\r\n            <hr/>\r\n            <span>\r\n                InputSearch\r\n            </span>\r\n            <div>\r\n                <TestInputSearch/>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from \"react\";\r\nimport s from \"./SubTitle.module.scss\";\r\n\r\n\r\nexport const SubTitle = (props: any) => {\r\n    return (<h3 className={s.subtitle}>{props.title}</h3>\r\n    );\r\n};\r\n\r\nexport default SubTitle;","import React, {useState} from 'react'\r\nimport {Button, Palette, Variant} from '../c2-SuperButton/Button';\r\n\r\n\r\nexport const Paginator: React.FC<PropsType> = ({\r\n                                                   cardPacksTotalCount, pageSize,\r\n                                                   currentPage = 1,\r\n                                                   onPageChanged = x => x,\r\n                                                   portionSize = 10\r\n                                               }) => {\r\n\r\n    let pagesCount = Math.ceil(cardPacksTotalCount / pageSize);\r\n\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return (\r\n        <div\r\n            // className={cn(styles.paginator)}\r\n        >\r\n            {portionNumber > 1 &&\r\n            <Button\r\n                palette={Palette.secondary}\r\n                variant={Variant.primary}\r\n                onClick={() => {\r\n                    setPortionNumber(portionNumber - 1)\r\n                }}\r\n            >\r\n                PREV\r\n            </Button>}\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return (\r\n                        <Button\r\n                            // className={cn({\r\n                            //     [styles.selectedPage]: currentPage === p\r\n                            // }, styles.pageNumber)}\r\n                            // className={styles.selectedPage}\r\n                            style={currentPage !== p ? {backgroundColor: 'transparent'} : {}}\r\n                            key={p}\r\n                            onClick={() => {\r\n                                onPageChanged(p);\r\n                            }}\r\n                            palette={Palette.primary}\r\n                            variant={Variant.primary}\r\n                        >\r\n                            {p}\r\n                        </Button>\r\n                    )\r\n                })}\r\n            {portionCount > portionNumber &&\r\n            <Button\r\n                palette={Palette.default}\r\n                variant={Variant.primary}\r\n                onClick={() => {\r\n                    setPortionNumber(portionNumber + 1)\r\n                }}\r\n            >\r\n                NEXT\r\n            </Button>}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n//types\r\ntype PropsType = {\r\n    cardPacksTotalCount: number\r\n    pageSize: number\r\n    currentPage?: number\r\n    onPageChanged?: (pageNumber: number) => void\r\n    portionSize?: number\r\n}","import React from \"react\";\r\nimport s from \"./TableHeader.module.scss\";\r\n\r\n\r\nexport const TableHeader = (props: any) => {\r\n    return (\r\n        <div className={s.tableHeader}>\r\n                <div className={s.tableHeaderTitle}>{props.title1}</div>\r\n                <div className={s.tableHeaderTitle}>{props.title2}</div>\r\n                <div className={s.tableHeaderTitle}>{props.title3}</div>\r\n                <div className={s.tableHeaderTitle}>{props.title4}</div>\r\n                <div className={s.tableHeaderTitle}>{props.title5}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport s from './TableRow.module.scss';\r\nimport {Button, Palette, Size, Variant} from '../common/c2-SuperButton/Button';\r\n\r\n\r\ntype PropsPackType = {\r\n    cardId: string\r\n    addedPackUserId: string\r\n    userId: string\r\n    packName: string\r\n    cardsCount: number\r\n    updated: string\r\n    created: string\r\n    onRemovePack: (id: string) => void\r\n    onEditPack: (id: string) => void\r\n}\r\n\r\nexport const TableRow: React.FC<PropsPackType> = props => {\r\n    const {\r\n        cardId,\r\n        onRemovePack,\r\n        onEditPack,\r\n        addedPackUserId,\r\n        userId,\r\n    } = props\r\n    return (\r\n        <div className={s.tableRowInner}>\r\n            <div>{props.packName}</div>\r\n            <div>{props.cardsCount}</div>\r\n            <div>{props.updated}</div>\r\n            <div>{props.created}</div>\r\n            <div className={s.tableBtnInner}>\r\n                {userId === addedPackUserId && <Button\r\n                    className={s.tableButton}\r\n                    variant={Variant.primary}\r\n                    size={Size.small}\r\n                    palette={Palette.secondary}\r\n                    onClick={() => onRemovePack(cardId)}\r\n                >\r\n                    Delete\r\n                </Button>}\r\n                {userId === addedPackUserId && <Button\r\n                    className={s.tableButton}\r\n                    variant={Variant.primary}\r\n                    size={Size.small}\r\n                    palette={Palette.primary}\r\n                    onClick={() => onEditPack(cardId)}\r\n                >\r\n                    Edit\r\n                </Button>}\r\n                <Button\r\n                    className={s.tableButton}\r\n                    variant={Variant.primary}\r\n                    size={Size.small}\r\n                >\r\n                    Learn\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TableRow;","import React from 'react';\r\nimport s from '../../pages/mainPacksList/Main.module.scss';\r\nimport {CardPacks} from '../../dal/api';\r\nimport {TableHeader} from '../tableHeader/TableHeader';\r\nimport {TableRow} from '../tableRow/TableRow';\r\n\r\ntype PropsPacksType = {\r\n    userId: string\r\n    cardPacks: CardPacks[]\r\n    onRemovePack: (id: string) => void\r\n    onEditPack: (id: string) => void\r\n}\r\n\r\nexport const Packs: React.FC<PropsPacksType> = React.memo(props => {\r\n    const {\r\n        userId,\r\n        cardPacks,\r\n        onRemovePack,\r\n        onEditPack,\r\n    } = props\r\n\r\n\r\n    return (\r\n\r\n        <div className={s.tableInner}>\r\n            <TableHeader title1=\"Name\" title2=\"Cards\" title3=\"Last Updated\" title4=\"Created by\" title5=\"Action\"/>\r\n            {cardPacks.map(u => <TableRow\r\n                cardId={u._id}\r\n                addedPackUserId={u.user_id}\r\n                userId={userId}\r\n                packName={u.name}\r\n                cardsCount={u.cardsCount}\r\n                updated={u.updated}\r\n                created={u.created}\r\n                onRemovePack={onRemovePack}\r\n                onEditPack={onEditPack}\r\n            />)}\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n})\r\n\r\n","import React, {useCallback, useEffect} from 'react';\r\nimport {Packs} from './Packs';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../bll/store';\r\nimport {CardPacks} from '../../dal/api';\r\nimport {addId, removePack, requestPacks} from '../../bll/SearchReducer';\r\nimport {PATH} from '../../Routes';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nexport const PacksContainer = () => {\r\n    const cardPacks = useSelector<AppStateType, CardPacks[]>(state => state.search.cardPacks)\r\n    const pageSize = useSelector<AppStateType, number>(state => state.search.pageSize)\r\n    const currentPage = useSelector<AppStateType, number>(state => state.search.currentPage)\r\n\r\n    const userId = useSelector<AppStateType, string>(state => state.app.meObject._id)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const onRemovePack = useCallback((id) => {\r\n        dispatch(removePack(id))\r\n    }, [dispatch])\r\n    const onEditPack = useCallback((id) => {\r\n        dispatch(addId(id))\r\n        history.push(PATH.EDIT_PACK)\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        dispatch(requestPacks(currentPage, pageSize))\r\n    }, [dispatch, currentPage, pageSize])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Packs cardPacks={cardPacks} userId={userId} onRemovePack={onRemovePack} onEditPack={onEditPack}\r\n            />\r\n        </>\r\n\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport s from './Main.module.scss'\r\nimport Title from '../../components/common/title/Title';\r\nimport SubTitle from '../../components/common/subTitle/SubTitle';\r\nimport {Button, Palette, Size} from '../../components/common/c2-SuperButton/Button';\r\nimport {Form, Formik} from 'formik';\r\nimport {InputSearch} from '../../components/common/inputSearch/InputSearch';\r\nimport {initialValuesType} from './MainContainer';\r\nimport {Paginator} from '../../components/common/Paginator/Paginator';\r\nimport {PacksContainer} from '../../components/Packs/PacksContainer';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {PATH} from '../../Routes';\r\n\r\nexport type PropsType = {\r\n    initialValues: initialValuesType\r\n    onSubmit: (values: initialValuesType) => void\r\n    cardPacksTotalCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n}\r\n\r\nexport const PacksList: React.FC<PropsType> = (props) => {\r\n\r\n    const {initialValues, onSubmit, cardPacksTotalCount, pageSize, currentPage, onPageChanged} = props\r\n\r\n\r\n    return (\r\n        <Formik initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n        >\r\n            <div className={s.conteiner}>\r\n                <div className={s.packsList}>\r\n                    <aside className={s.aside}>\r\n                        <SubTitle title=\"Show packs cards\" />\r\n                        <form action=\"\">\r\n                            <input type=\"radio\" name=\"switchCard\" />\r\n                            <input type=\"radio\" name=\"switchCard\" />\r\n                        </form>\r\n                        <SubTitle title=\"Number of cards\" />\r\n                        Ползунок туда сюда\r\n                    </aside>\r\n                    <main className={s.main}>\r\n                        <Title title=\"Packs list\" />\r\n                        <div className={s.search}>\r\n                            <Form>\r\n                                <InputSearch type=\"text\" name=\"packName\" placeholder=\"Search...\" />\r\n                            </Form>\r\n                            <NavLink to={PATH.NEW_PACKS} className={s.linkSingUp}><Button\r\n                                size={Size.medium}\r\n                                palette={Palette.primary}\r\n                                title=\"Add new pack\" />\r\n                            </NavLink>\r\n\r\n\r\n                        </div>\r\n                            <PacksContainer />\r\n                    </main>\r\n\r\n                </div>\r\n                <div className={s.wrapperPaginator}>\r\n                    <Paginator cardPacksTotalCount={cardPacksTotalCount} pageSize={pageSize} currentPage={currentPage}\r\n                               onPageChanged={onPageChanged} />\r\n                </div>\r\n\r\n            </div>\r\n        </Formik>\r\n    );\r\n};\r\n\r\n","import React, {useEffect} from 'react';\r\nimport {PacksList} from './Main';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {requestPacks, searchPacks} from '../../bll/SearchReducer';\r\nimport {AppStateType} from '../../bll/store';\r\n\r\n\r\nexport const PacksListContainer = () => {\r\n    const cardPacksTotalCount = useSelector<AppStateType, number>(state => state.search.cardPacksTotalCount)\r\n    const pageSize = useSelector<AppStateType, number>(state => state.search.pageSize)\r\n    const currentPage = useSelector<AppStateType, number>(state => state.search.currentPage)\r\n    const dispatch = useDispatch()\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(requestPacks(pageNumber, pageSize))\r\n    }\r\n\r\n    const initialValues: initialValuesType = {\r\n        packName: ''\r\n    }\r\n\r\n    const onSubmit = React.useCallback((values: any) => {\r\n        // alert(JSON.stringify(values))\r\n        dispatch(searchPacks(values))\r\n    }, [dispatch])\r\n    return (\r\n        <>\r\n            <PacksList\r\n                initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n                currentPage={currentPage}\r\n                pageSize={pageSize}\r\n                cardPacksTotalCount={cardPacksTotalCount}\r\n                onPageChanged={onPageChanged}\r\n            />\r\n        </>\r\n    );\r\n};\r\n//types\r\nexport type initialValuesType =\r\n    {\r\n        packName: string\r\n    }\r\n","import React from 'react'\r\nimport s from './ModalDeletePack.module.scss';\r\nimport SubTitle from \"../../../components/common/subTitle/SubTitle\";\r\nimport {Button, Size} from \"../../../components/common/c2-SuperButton/Button\";\r\n\r\n\r\nexport function ModalDeletePack() {\r\n    return (\r\n        <div className={s.modalDelete}>\r\n            <div className={s.containerDelete}>\r\n                <div className={s.modalTitleInner}>\r\n                    <SubTitle title=\"Delete Pack\" />\r\n                    <span>X</span>\r\n                </div>\r\n                <div className={s.modalDeleteText}>\r\n                <p>Do you really want to remove <strong>Pack Name - Name Pack?</strong> All cards will be excluded from this course.</p>\r\n                </div>\r\n                <div className={s.btnInner}>\r\n                    <Button size={Size.small} title=\"Cancel\" />\r\n                    <Button size={Size.small} title=\"Delete\" />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport s from './ModalAddNewPack.module.scss';\r\nimport SubTitle from '../../../components/common/subTitle/SubTitle';\r\nimport {Button, Palette, Size} from '../../../components/common/c2-SuperButton/Button';\r\nimport {InputSearch} from '../../../components/common/inputSearch/InputSearch';\r\nimport {Form, Formik} from 'formik';\r\nimport {initialValuesType} from './ModalAddNewPackContainer';\r\n\r\nexport type PropsType = {\r\n    initialValues: initialValuesType\r\n    onSubmit: (values: initialValuesType) => void\r\n}\r\n\r\nexport const ModalAddNewPack: React.FC<PropsType> = React.memo(props => {\r\n\r\n    const {initialValues, onSubmit} = props\r\n    return (\r\n        <Formik initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n        >\r\n            <div className={s.modalAdd}>\r\n                <div className={s.containerAdd}>\r\n                    <div className={s.modalTitleInner}>\r\n                        <SubTitle title=\"Add new pack\"/>\r\n                        <span>X</span>\r\n                    </div>\r\n                    <Form>\r\n                        <div className={s.modalAddInput}>\r\n                            <label>Name Pack</label>\r\n                            <InputSearch type=\"text\" name=\"name\"/>\r\n                        </div>\r\n                        <div className={s.btnInner}>\r\n                            <Button size={Size.small} title=\"Cancel\"/>\r\n                            <Button size={Size.small} palette={Palette.primary} title=\"Save\"/>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n\r\n            </div>\r\n        </Formik>\r\n    )\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {ModalAddNewPack} from './ModalAddNewPack';\r\nimport {useDispatch} from 'react-redux';\r\nimport {addCardsPacks} from '../../../bll/SearchReducer';\r\n\r\n\r\nexport const ModalAddNewPackContainer = () => {\r\n    const dispatch = useDispatch()\r\n    const initialValues: initialValuesType = {\r\n        name: '',\r\n        path: '',\r\n        grade: 0,\r\n        shots: 0,\r\n        rating: 0,\r\n        deckCover: '',\r\n        private: false,\r\n        type: ''\r\n\r\n    }\r\n\r\n    const onSubmit = React.useCallback((values: initialValuesType) => {\r\n        // alert(JSON.stringify(values))\r\n        dispatch(addCardsPacks(values))\r\n    }, [])\r\n    return (\r\n        <ModalAddNewPack\r\n            initialValues={initialValues}\r\n            onSubmit={onSubmit}\r\n        />\r\n    )\r\n}\r\n//types\r\nexport type initialValuesType =\r\n    {\r\n        name: string\r\n        path: string\r\n        grade: number\r\n        shots: number\r\n        rating: number\r\n        deckCover: string\r\n        private: false\r\n        type: string\r\n    }\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport s from './ModalEditPack.module.scss';\r\nimport SubTitle from '../../../components/common/subTitle/SubTitle';\r\nimport {Button, Palette, Size} from '../../../components/common/c2-SuperButton/Button';\r\nimport {InputSearch} from '../../../components/common/inputSearch/InputSearch';\r\nimport {Form, Formik} from 'formik';\r\nimport {initialValuesType} from './ModalEditPackContainer';\r\n\r\nexport type PropsType = {\r\n    initialValues: initialValuesType\r\n    onSubmit: (values: initialValuesType) => void\r\n}\r\n\r\nexport const ModalEditPack: React.FC<PropsType> = React.memo(props => {\r\n\r\n    const {initialValues, onSubmit} = props\r\n\r\n    return (\r\n        <Formik initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n        >\r\n            <div className={s.modalAdd}>\r\n                <div className={s.containerAdd}>\r\n                    <div className={s.modalTitleInner}>\r\n                        <SubTitle title=\"Edit pack\"/>\r\n                        <span>X</span>\r\n                    </div>\r\n                    <Form>\r\n                        <div className={s.modalAddInput}>\r\n                            <label>Name Pack</label>\r\n                            <InputSearch type=\"text\" name=\"name\"/>\r\n                        </div>\r\n                        <div className={s.btnInner}>\r\n                            <Button size={Size.small} title=\"Cancel\"/>\r\n                            <Button size={Size.small} palette={Palette.primary} title=\"Save\"/>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n\r\n            </div>\r\n        </Formik>\r\n    )\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {ModalEditPack} from './ModalEditPack';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {editPack} from '../../../bll/SearchReducer';\r\nimport {AppStateType} from '../../../bll/store';\r\n\r\n\r\nexport const ModalEditPackContainer = () => {\r\n    const dispatch = useDispatch()\r\n    const id = useSelector<AppStateType, string>(state => state.search._id)\r\n    const initialValues: initialValuesType = {\r\n        _id: id,\r\n        name: '',\r\n\r\n    }\r\n\r\n    const onSubmit = React.useCallback((values: initialValuesType) => {\r\n        // alert(JSON.stringify(values))\r\n        dispatch(editPack(values))\r\n    }, [])\r\n\r\n    return (\r\n        <ModalEditPack\r\n            initialValues={initialValues}\r\n            onSubmit={onSubmit}\r\n        />\r\n    )\r\n}\r\n//types\r\nexport type initialValuesType =\r\n    {\r\n        _id: string\r\n        name: string\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport {Profile} from './pages/Profile';\r\nimport Error404 from './pages/error404/Error404';\r\nimport {RegistrationContainer} from './pages/Registr/RegistrationContainer';\r\nimport {ForgotNewPasswordContainer} from './pages/passwordRecovery/enterNewPassword/NewPasswordContainer';\r\nimport {CheckEmail} from './pages/passwordRecovery/checkEmail/CheckEmail';\r\nimport {EnterEmailContainer} from './pages/passwordRecovery/enterEmail/EnterEmailContainer';\r\nimport {AuthLoginContainer} from './pages/Login/AuthLoginContainer';\r\nimport {Test} from './pages/test/Test';\r\nimport {PacksListContainer} from './pages/mainPacksList/MainContainer';\r\nimport {ModalDeletePack} from './pages/modalWindows/modalDeletePack/ModalDeletePack';\r\nimport {ModalAddNewPackContainer} from './pages/modalWindows/modalAddNewPack/ModalAddNewPackContainer';\r\nimport {ModalEditPackContainer} from './pages/modalWindows/modalEditPack/ModalEditPackContainer';\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    REGISTRATION: '/registration',\r\n    PROFILE: '/profile',\r\n    RECOVERY_PASSWORD: '/recovery-password',\r\n    NEW_PASSWORD: '/set-new-password/:token',\r\n    TEST: '/test',\r\n    HEADER: '/header',\r\n    FORGOT_EMAIL: '/check-email',\r\n    PACKS_LIST: '/pack-list',\r\n    NEW_PACKS: '/new-pack',\r\n    DELETE_PACK: '/delete-pack',\r\n    EDIT_PACK: '/edit-pack'\r\n}\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.LOGIN}/>}/>\r\n\r\n                <Route path={PATH.LOGIN} render={() => <AuthLoginContainer/>}/>\r\n                <Route path={PATH.REGISTRATION} render={() => <RegistrationContainer/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.RECOVERY_PASSWORD} render={() => <EnterEmailContainer/>}/>\r\n                <Route path={PATH.NEW_PASSWORD} render={() => <ForgotNewPasswordContainer/>}/>\r\n                <Route path={PATH.FORGOT_EMAIL} render={() => <CheckEmail/>}/>\r\n                <Route path={PATH.PACKS_LIST} render={() => <PacksListContainer/>}/>\r\n                <Route path={PATH.NEW_PACKS} render={() => <ModalAddNewPackContainer/>}/>\r\n                <Route path={PATH.DELETE_PACK} render={() => <ModalDeletePack/>}/>\r\n                <Route path={PATH.EDIT_PACK} render={() => <ModalEditPackContainer/>}/>\r\n                <Route path={PATH.TEST} render={() => <Test/>}/>\r\n\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Routes;","import React from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\nimport style from './Header.module.css'\r\nimport {PATH} from '../../Routes';\r\nimport Logo from '../../components/common/logo/Logo';\r\n\r\n\r\nexport function Header() {\r\n    return (\r\n        <div className={style.header}>\r\n            <Logo/>\r\n            <form action=\"\">\r\n                <input type=\"radio\" name=\"switchPage\"/>\r\n                <input type=\"radio\" name=\"switchPage\"/>\r\n            </form>\r\n            <div>\r\n                <NavLink to={PATH.LOGIN} className={style.link} activeClassName={style.active}>Login</NavLink>\r\n                <NavLink to={PATH.REGISTRATION} className={style.link}\r\n                         activeClassName={style.active}>Registration</NavLink>\r\n                <NavLink to={PATH.RECOVERY_PASSWORD} className={style.link}\r\n                         activeClassName={style.active}>Forgot</NavLink>\r\n                <NavLink to={PATH.FORGOT_EMAIL} className={style.link} activeClassName={style.active}>Check</NavLink>\r\n                <NavLink to={PATH.NEW_PASSWORD} className={style.link}\r\n                         activeClassName={style.active}>NewPassword</NavLink>\r\n                <NavLink to={PATH.PROFILE} className={style.link} activeClassName={style.active}>Profile</NavLink>\r\n                <NavLink to={PATH.PACKS_LIST} className={style.link} activeClassName={style.active}>PackList</NavLink>\r\n                <NavLink to={PATH.NEW_PACKS} className={style.link} activeClassName={style.active}>NewPack</NavLink>\r\n                <NavLink to={PATH.DELETE_PACK} className={style.link} activeClassName={style.active}>DelPack</NavLink>\r\n                <NavLink to={PATH.EDIT_PACK} className={style.link} activeClassName={style.active}>EditPack</NavLink>\r\n                <NavLink to={PATH.TEST} className={style.link} activeClassName={style.active}>Test</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport Routes from './Routes';\r\nimport {Header} from './pages/header/Header';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from './bll/store';\r\nimport {initializeTC} from './bll/auth-reducer';\r\n\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch()\r\n    const isInitialized = useSelector<AppStateType, boolean>((state => state.auth.isInitialized))\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeTC())\r\n    }, [dispatch])\r\n\r\n    if (!isInitialized) {\r\n        return <div>\r\n            ...Loading\r\n        </div>\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n            <Header/>\r\n            <Routes/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport {AuthActionType, authReducer} from './auth-reducer';\r\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk'\r\nimport {appReducer, AppReducerActionType} from './app-reducer';\r\nimport {ForgotActionType, passwordRecoveryReducer} from './PasswordRecoveryReducer';\r\nimport {SearchActionType, SearchReducer } from './SearchReducer';\r\n\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    recovery: passwordRecoveryReducer,\r\n    search:SearchReducer\r\n})\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store\r\n\r\nexport type AppStateType = ReturnType<typeof reducers>\r\nexport type AppActionType = AuthActionType | AppReducerActionType | ForgotActionType | SearchActionType\r\nexport type AppThunk = ThunkAction<void, AppStateType, unknown, AppActionType>\r\n\r\n//@ts-ignore\r\nwindow.store = store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./bll/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerForm\":\"NewPassword_containerForm__26iPk\",\"formWrapper\":\"NewPassword_formWrapper__30Gmk\",\"formTitle\":\"NewPassword_formTitle__2118e\",\"formSubTitle\":\"NewPassword_formSubTitle__3F-WH\",\"formLogin\":\"NewPassword_formLogin__3muu9\",\"buttonInner\":\"NewPassword_buttonInner__3GLq-\",\"textNewPassword\":\"NewPassword_textNewPassword__1hf_1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"group\":\"Input_group__2pl0a\",\"input\":\"Input_input__2ou2U\",\"bar\":\"Input_bar__7Yb93\",\"highlight\":\"Input_highlight__3cRpU\",\"inputHighlighter\":\"Input_inputHighlighter__3n9AM\",\"passwordControl\":\"Input_passwordControl__1-Loc\",\"showPassword\":\"Input_showPassword__2wnsG\",\"hidePassword\":\"Input_hidePassword__16vTc\",\"label\":\"Input_label__2GLH-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerForm\":\"AuthLogin_containerForm__2eFAT\",\"formWrapper\":\"AuthLogin_formWrapper__xZFCw\",\"linkForgotPassword\":\"AuthLogin_linkForgotPassword__1_nG6\",\"buttonInner\":\"AuthLogin_buttonInner__nwnR1\",\"blockSingUp\":\"AuthLogin_blockSingUp__1tS2g\",\"formText\":\"AuthLogin_formText__21jVJ\",\"linkSingUp\":\"AuthLogin_linkSingUp__1Er9x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerForm\":\"CheckEmail_containerForm__1uVz9\",\"formWrapper\":\"CheckEmail_formWrapper__3ON9u\",\"formTitle\":\"CheckEmail_formTitle__3zb-K\",\"imgMail\":\"CheckEmail_imgMail__3-11z\",\"formSubTitle\":\"CheckEmail_formSubTitle__2jmTB\",\"textCheckEmail\":\"CheckEmail_textCheckEmail__RiniQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableHeader\":\"TableHeader_tableHeader__1nmLZ\",\"tableHeaderTitle\":\"TableHeader_tableHeaderTitle__1N5aL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__3jiY5\",\"checkbox\":\"SuperCheckbox_checkbox__3l0wK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"SuperRadio_body__FXWwA\",\"label\":\"SuperRadio_label__2MOlu\",\"radio\":\"SuperRadio_radio__2pMFd\",\"radDesign\":\"SuperRadio_radDesign__drltg\",\"RadText\":\"SuperRadio_RadText__3ffPF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableRowInner\":\"TableRow_tableRowInner__RxuKH\",\"tableBtnInner\":\"TableRow_tableBtnInner__1IJMd\",\"tableButton\":\"TableRow_tableButton__3GMH5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalDelete\":\"ModalDeletePack_modalDelete__1qD5f\",\"containerDelete\":\"ModalDeletePack_containerDelete__2VOLY\",\"modalTitleInner\":\"ModalDeletePack_modalTitleInner__1ba2E\",\"modalDeleteText\":\"ModalDeletePack_modalDeleteText__1PYHP\",\"btnInner\":\"ModalDeletePack_btnInner__1QOiz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalAdd\":\"ModalAddNewPack_modalAdd__nX8C4\",\"containerAdd\":\"ModalAddNewPack_containerAdd__2YuuA\",\"modalTitleInner\":\"ModalAddNewPack_modalTitleInner__2Y2IH\",\"modalAddInput\":\"ModalAddNewPack_modalAddInput__1Jvq7\",\"btnInner\":\"ModalAddNewPack_btnInner__27pMB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalAdd\":\"ModalEditPack_modalAdd__1zqVN\",\"containerAdd\":\"ModalEditPack_containerAdd__AesBP\",\"modalTitleInner\":\"ModalEditPack_modalTitleInner__3SYcK\",\"modalAddInput\":\"ModalEditPack_modalAddInput__ADvrK\",\"btnInner\":\"ModalEditPack_btnInner__3oaEX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerForm\":\"AuthRegistr_containerForm__2NCht\",\"formWrapper\":\"AuthRegistr_formWrapper__2kOr2\",\"btnInner\":\"AuthRegistr_btnInner__2Tlnc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__1IT4b\",\"superInput\":\"SuperInputText_superInput__21Q7b\",\"errorInput\":\"SuperInputText_errorInput__Vpj4U\",\"error\":\"SuperInputText_error__1hkkU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__LsX5X\",\"red\":\"SuperButton_red__10X_-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"TestSuperEditableSpan_column__2kRbh\",\"button\":\"TestSuperEditableSpan_button__3Grur\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__2a9hZ\",\"option\":\"SuperSelect_option__3k688\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Header_link__2Awbj\",\"active\":\"Header_active__3QiAR\",\"header\":\"Header_header__3RmP5\"};"],"sourceRoot":""}
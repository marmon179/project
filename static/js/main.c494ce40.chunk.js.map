{"version":3,"sources":["components/common/logo/Logo.module.scss","components/common/title/Title.module.scss","pages/header/Header.module.css","components/common/loading/Loading.module.scss","pages/test/test.module.css","pages/test/testSuperInput/TestSuperInput.module.css","pages/test/testSuperButton/TestSuperButton.module.css","pages/test/testSuperCheckbox/TestSuperCheckbox.module.css","components/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","pages/test/testSuperSelect/TestSuperSelect.module.css","pages/test/testSuperRadio/TestSuperRadio.module.css","pages/test/testSuperRange/TestSuperRange.module.css","pages/passwordRecovery/enterEmail/EnterEmail.module.scss","components/common/c1-SuperInputText/Input.module.scss","pages/passwordRecovery/enterNewPassword/NewPassword.module.scss","pages/Profile.tsx","pages/error404/Error404.tsx","components/common/c2-SuperButton/Button.tsx","dal/api.ts","components/common/c1-SuperInputText/Input.tsx","components/common/logo/Logo.tsx","components/common/title/Title.tsx","assets/Validators/validators.ts","components/common/c3-SuperCheckbox/Checkbox.tsx","pages/Registr/Registration.tsx","pages/Registr/RegistrationContainer.tsx","bll/RegistrationReducer.ts","assets/img/loading/loading.svg","components/common/loading/Loading.tsx","components/common/inputFormik/InputFormik.tsx","pages/passwordRecovery/enterNewPassword/NewPassword.tsx","bll/PasswordRecoveryReducer.ts","pages/passwordRecovery/enterNewPassword/NewPasswordContainer.tsx","assets/img/authForgotPasswordCheckEmail/mail.svg","pages/passwordRecovery/checkEmail/CheckEmail.tsx","pages/passwordRecovery/enterEmail/EnterEmail.tsx","pages/passwordRecovery/enterEmail/EnterEmailContainer.tsx","bll/app-reducer.ts","bll/auth-reducer.ts","pages/Login/AuthLogin.tsx","pages/Login/AuthLoginContainer.tsx","components/common/c1-SuperInputText/SuperInputText.tsx","pages/test/testSuperInput/TestSuperInput.tsx","components/common/c2-SuperButton/SuperButton.tsx","pages/test/testSuperButton/TestSuperButton.tsx","components/common/c3-SuperCheckbox/SuperCheckbox.tsx","pages/test/testSuperCheckbox/TestSuperCheckbox.tsx","pages/test/testSuperEditableSpan/localStorage/localStorage.ts","components/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","pages/test/testSuperEditableSpan/TestSuperEditableSpan.tsx","components/common/c5-SuperSelect/SuperSelect.tsx","pages/test/testSuperSelect/TestSuperSelect.tsx","components/common/c6-SuperRadio/SuperRadio.tsx","pages/test/testSuperRadio/TestSuperRadio.tsx","components/common/c7-SuperRange/SuperRange.tsx","pages/test/testSuperRange/TestSuperRange.tsx","pages/test/Test.tsx","Routes.tsx","pages/header/Header.tsx","App.tsx","reportWebVitals.ts","bll/store.ts","index.tsx","components/common/inputFormik/Input.module.scss","pages/Login/AuthLogin.module.scss","components/common/c2-SuperButton/Button.module.scss","pages/passwordRecovery/checkEmail/CheckEmail.module.scss","components/common/c3-SuperCheckbox/SuperCheckbox.module.css","components/common/c6-SuperRadio/SuperRadio.module.css","pages/Registr/AuthRegistr.module.scss","components/common/c1-SuperInputText/SuperInputText.module.css","components/common/c2-SuperButton/SuperButton.module.css","pages/test/testSuperEditableSpan/TestSuperEditableSpan.module.css","components/common/c5-SuperSelect/SuperSelect.module.scss","pages/error404/Error404.module.css"],"names":["module","exports","Profile","Error404","Size","Variant","eyeRit","s","eye","eyeR","blodAll","blod","blod2","className","container","error","p","dracula","con","hair","hairR","head","mouth","pageMs","pageMsg","instance","axios","create","baseURL","withCredentials","authAPI","post","data","Input","props","type","onChange","onChangeText","onKeyPress","onEnter","title","spanClassName","restProps","React","useState","visibleEye","setVisibleEye","group","required","e","input","passwordControl","showPassword","hidePassword","style","display","onClick","value","width","height","viewBox","fill","xmlns","x1","y1","x2","y2","fillRule","clipRule","d","highlight","bar","label","color","position","top","Logo","logo","Title","Button","size","variant","sizeClassName","small","medium","big","variantClassName","default","primary","secondary","finalClassName","btn","children","validationSchema","yup","shape","email","password","min","confirmPassword","oneOf","acceptTerms","Checkbox","onChangeChecked","finalInputClassName","checkbox","currentTarget","checked","Registration","memo","initialValues","onSubmit","formik","useFormik","form","containerForm","formWrapper","handleSubmit","touched","errors","getFieldProps","btnInner","RegistrationContainer","dispatch","useDispatch","useCallback","values","then","isRegistration","Loading","wrapperLoading","src","loadingImg","InputFormik","useField","field","meta","name","NewPassword","disable","loading","toLoginPage","to","PATH","LOGIN","formTitle","formSubTitle","formLogin","textNewPassword","buttonInner","disabled","initState","toCheckEmailPage","setMailName","buttonDisable","disableButtonAC","showLoadingAC","ForgotNewPasswordContainer","useSelector","state","recovery","token","useParams","resetPasswordToken","res","console","log","info","catch","rej","response","finally","CheckEmail","mailName","imgMail","mail","alt","textCheckEmail","EnterEmail","isMail","FORGOT_EMAIL","formEmail","textEmail","blockSingUp","formText","linkSingUp","EnterEmailContainer","from","message","meObject","isLoggedIn","isInitialized","setInitializeAppAC","setAuthError","AuthLogin","validate","RECOVERY_PASSWORD","linkForgotPassword","REGISTRATION","AuthLoginContainer","test","length","validators","setIsLoggedTC","SuperInputText","finalSpanClassName","errorInput","superInput","key","TestSuperInput","text","setText","column","alert","SuperButton","red","button","TestSuperButton","SuperCheckbox","TestSuperCheckbox","saveState","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","span","TestSuperEditableSpan","setValue","undefined","SuperSelect","options","onChangeOption","mappedOptions","map","o","i","option","finalSelectClassName","select","arr","TestSuperSelect","SuperRadio","onChangeCallback","body","radio","radDesign","RadText","TestSuperRadio","SuperRange","onChangeRange","finalRangeClassName","range","TestSuperRange","Test","PROFILE","NEW_PASSWORD","TEST","HEADER","Routes","path","exact","render","Header","header","link","activeClassName","active","App","auth","useEffect","userData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","app","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c494ce40.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__2--_R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__2qDMs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Header_link__MF_ty\",\"active\":\"Header_active__2wia3\",\"header\":\"Header_header__2RhEF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperLoading\":\"Loading_wrapperLoading__2nV3u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"test\":\"test_test__oUI8K\",\"wrapper\":\"test_wrapper__2s3oZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"TestSuperInput_column__3XyrP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"TestSuperButton_column__2tQ-x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"TestSuperCheckbox_column__3-eY1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"SuperEditableSpan_span__1f8Nv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"TestSuperSelect_column__2kAnk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"TestSuperRadio_column__glKUJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"TestSuperRange_column__3-fkA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerForm\":\"EnterEmail_containerForm__2psxF\",\"formWrapper\":\"EnterEmail_formWrapper__2lRKZ\",\"formTitle\":\"EnterEmail_formTitle__EnQON\",\"formSubTitle\":\"EnterEmail_formSubTitle__3iRE7\",\"formEmail\":\"EnterEmail_formEmail__ivYTI\",\"formInput\":\"EnterEmail_formInput__3Qhaz\",\"textEmail\":\"EnterEmail_textEmail__34sKG\",\"buttonInner\":\"EnterEmail_buttonInner__1u9ZC\",\"blockSingUp\":\"EnterEmail_blockSingUp__tYIhA\",\"formText\":\"EnterEmail_formText__1hxQM\",\"linkSingUp\":\"EnterEmail_linkSingUp__2snna\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"group\":\"Input_group__2sviZ\",\"input\":\"Input_input__3cueq\",\"bar\":\"Input_bar__3XouU\",\"highlight\":\"Input_highlight__qkzD1\",\"inputHighlighter\":\"Input_inputHighlighter__2xHTa\",\"passwordControl\":\"Input_passwordControl__1KhUm\",\"showPassword\":\"Input_showPassword__3kd7y\",\"hidePassword\":\"Input_hidePassword__3Ji5J\",\"label\":\"Input_label__2xK8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerForm\":\"NewPassword_containerForm__YpxW_\",\"formWrapper\":\"NewPassword_formWrapper__kgKb4\",\"formTitle\":\"NewPassword_formTitle__2bLzW\",\"formSubTitle\":\"NewPassword_formSubTitle__1VeDk\",\"formLogin\":\"NewPassword_formLogin__3GZPk\",\"buttonInner\":\"NewPassword_buttonInner__3V-0K\",\"textNewPassword\":\"NewPassword_textNewPassword__3gZSW\"};","import React from 'react';\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <div>\r\n            {<h1>Profile</h1>}\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react'\r\nimport s from './Error404.module.css'\r\n\r\nfunction Error404() {\r\n    const eyeRit = `${s.eye} ${s.eyeR}`\r\n    const blodAll = `${s.blod} ${s.blod2}`\r\n    return (\r\n        <div className={s.container}>\r\n\r\n            <div className={s.error}>\r\n                <p className={s.p}>4</p>\r\n                <span className={s.dracula}>\r\n\t\t\t<div className={s.con}>\r\n\t\t\t\t<div className={s.hair}/>\r\n\t\t\t\t<div className={s.hairR}/>\r\n\t\t\t\t<div className={s.head}/>\r\n    \t\t<div className={s.eye}/>\r\n    \t\t<div className={eyeRit}/>\r\n  \t\t\t<div className={s.mouth}/>\r\n  \t\t\t<div className={s.blod}/>\r\n  \t\t\t<div className={blodAll}/>\r\n\t\t\t</div>\r\n\t\t</span>\r\n                <p className={s.p}>4</p>\r\n\r\n                <div className={s.pageMs}>\r\n                    <p className={s.pageMsg}> Oops, the page you're looking for Disappeared </p>\r\n                    {/*<button className={s.goBack} >Go Back</button>*/}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './Button.module.scss'\r\n\r\nexport const Button: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        size = 0,\r\n        variant = 0,\r\n        title,\r\n        className,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const sizeClassName = size === 0 ? s.small : size === 1 ? s.medium : s.big\r\n    const variantClassName = variant === 0 ? s.default : variant === 1 ? s.primary : s.secondary\r\n    const finalClassName = `${s.btn} ${sizeClassName} ${variantClassName}  ${className} `\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps}\r\n        >\r\n            {title ? title : restProps.children}\r\n        </button>\r\n    )\r\n}\r\n//types\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    size?: Size\r\n    variant?: Variant\r\n}\r\n\r\nexport enum Size {\r\n    small,\r\n    medium,\r\n    big\r\n}\r\nexport enum Variant {\r\n    default,\r\n    primary,\r\n    secondary\r\n}","import {DEV_VERSION} from '../config';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const baseURL = DEV_VERSION\r\n    ? 'http://localhost:7542/2.0/'\r\n    : 'https://neko-back.herokuapp.com/2.0/'\r\n\r\nexport const instance = axios.create({\r\n    baseURL,\r\n    withCredentials: true,\r\n})\r\n\r\nexport const authAPI = {\r\n    /**\r\n     * Check user Data and cookies\r\n     * */\r\n    me() {\r\n        return instance.post<AuthMeResponseType>('auth/me')\r\n    },\r\n\r\n    /**\r\n     * Logout. Change token from server and remove cookies\r\n     * */\r\n    logout() {\r\n        return instance.delete<OtherResponseType>('auth/me')\r\n    },\r\n\r\n    /**\r\n     * Update user Data\r\n     * data {\r\n     *     name: string\r\n     *     avatar: \"https//avatar-url.img\" // url or base64\r\n     * }\r\n     * */\r\n    updateUser(data: UpdateUserParamsType) {\r\n        return instance.put<UpdateUserDataType>('auth/me', data)\r\n    },\r\n\r\n    /**\r\n     * Login request instance\r\n     * data {\r\n     *     email: string\r\n     *     password: string\r\n     *     rememberMe: boolean\r\n     * }\r\n     * */\r\n    login(data: LoginParamsType) {\r\n        return instance.post<AuthMeResponseType>('auth/login', data)\r\n    },\r\n\r\n    /**\r\n     * Registration user request instance\r\n     * data {\r\n     *     email: string\r\n     *     password: string\r\n     * }\r\n     * */\r\n    register(data: RegistrationParamsType) {\r\n        return instance.post<RegistrationResponseType>('auth/register', data)\r\n    },\r\n\r\n    /**\r\n     * Registration user request instance\r\n     * data {\r\n     *     email: string\r\n     *     from: string // Email subject\r\n     *     message: `<div style=\"background-color: lime; padding: 15px\">\r\n\t        password recovery link:\r\n\t        <a href='http://localhost:3000/#/set-new-password/$token$'>\r\n\t        link</a></div>`\r\n     * }\r\n     * */\r\n    recovery(data: ForgotParamsType) {\r\n        return instance.post<OtherResponseType>('auth/forgot', data)\r\n    },\r\n\r\n    /**\r\n     * Registration user request instance\r\n     * data {\r\n     *     password: string\r\n     *     resetPasswordToken: \"some-token-from-url\"\r\n     * }\r\n     * */\r\n    setNewPassword(data: SetNewPasswordParamsType) {\r\n        return instance.post<OtherResponseType>('auth/set-new-password', data)\r\n    },\r\n}\r\n\r\n// Types\r\n\r\n// Request Types\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe?: boolean\r\n}\r\nexport type RegistrationParamsType = {\r\n    email: string\r\n    password: string\r\n}\r\nexport type UpdateUserParamsType = {\r\n    name: string\r\n    avatar: string\r\n}\r\nexport type ForgotParamsType = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n}\r\nexport type SetNewPasswordParamsType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\n\r\n// Response Types\r\nexport type AuthMeResponseType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n\r\n    error?: string;\r\n}\r\n\r\ntype RegistrationResponseType = {\r\n    addedUser: {}\r\n    /**\r\n     * не важные данные, просто для проверки\r\n     * чтобы посмотреть как выглядит созданный юзер\r\n     */\r\n\r\n    error?: string;\r\n}\r\n\r\ntype UpdateUserDataType = {\r\n    updatedUser: AuthMeResponseType\r\n    /**\r\n     * весь юзер с изменёнными данными\r\n     * */\r\n\r\n    error?: string\r\n}\r\n\r\n/**\r\n * Logout, Forgot, Set New Password response Type\r\n * */\r\ntype OtherResponseType = {\r\n    info: string\r\n\r\n    error: string;\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './Input.module.scss'\r\nimport {FieldConfig} from 'formik';\r\n\r\n\r\nexport const Input: React.FC<SuperInputTextPropsType> = props => {\r\n    const {\r\n        type, onChange, onChangeText, onKeyPress, onEnter, error, className,\r\n        spanClassName, title, ...restProps\r\n    } = props\r\n\r\n    const [visibleEye, setVisibleEye] = React.useState(false)\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n    }\r\n\r\n    return (\r\n        <div className={s.group}>\r\n            <input\r\n                required\r\n                type={visibleEye ? 'text' : type}\r\n\r\n                onChange={onChangeCallback}\r\n                className={s.input}\r\n                {...restProps}\r\n            />\r\n            <a className={`${s.passwordControl} ${visibleEye ? s.showPassword : s.hidePassword}`}\r\n               style={type === 'password' ? {display: 'inline'} : {display: 'none'}}\r\n               onClick={() => setVisibleEye((value) => !value)}\r\n            >\r\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <line x1=\"40\" y1=\"30\" x2=\"240\" y2=\"100\"/>\r\n                    <path fillRule=\"evenodd\" clipRule=\"evenodd\"\r\n                          d=\"M12 4.5C7 4.5 2.73 7.61 1 12C2.73 16.39 7 19.5 12 19.5C17 19.5 21.27 16.39 23 12C21.27 7.61 17 4.5 12 4.5ZM12 17C9.23997 17 6.99997 14.76 6.99997 12C6.99997 9.24 9.23997 6.99999 12 6.99999C14.76 6.99999 17 9.24 17 12C17 14.76 14.76 17 12 17ZM12 9C10.34 9 8.99997 10.34 8.99997 12C8.99997 13.66 10.34 15 12 15C13.66 15 15 13.66 15 12C15 10.34 13.66 9 12 9Z\"\r\n                          fill=\"#2D2E46\"/>\r\n                </svg>\r\n            </a>\r\n            <span className={s.highlight}/>\r\n            <span className={s.bar}/>\r\n            <label className={s.label}>{title}</label>\r\n\r\n            <div style={{color: 'red', position: 'absolute', top: '50px'}}>\r\n                {error}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Types\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void  // Not used\r\n    onEnter?: () => void // Not used\r\n    error?: string | null // Not used\r\n    spanClassName?: string // Not used\r\n} & FieldConfig<any>\r\n\r\nexport default Input;","import React from \"react\";\r\nimport s from \"./Logo.module.scss\";\r\n\r\n\r\nexport const Logo = () => {\r\n    return (<h1 className={s.logo}>it-incubator</h1>\r\n    );\r\n};\r\n\r\nexport default Logo;","import React from \"react\";\r\nimport s from \"./Title.module.scss\";\r\n\r\n\r\nexport const Title = (props: any) => {\r\n    return (<h2 className={s.title}>{props.title}</h2>\r\n    );\r\n};\r\n\r\nexport default Title;","import * as yup from 'yup';\r\n\r\nexport type FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    confirmPassword?: string\r\n    resetPasswordToken?: string\r\n}\r\n\r\nexport const validators = (values: FormikErrorType) => {\r\n    const errors: FormikErrorType = {}\r\n    if (!values.email) {\r\n        errors.email = 'Required'\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = 'Invalid email address';\r\n    }\r\n    if (!values.password) {\r\n        errors.password = 'Required'\r\n    } else if (values.password.length < 8) {\r\n        errors.password = 'Password must be more than 8 characters long';\r\n    }\r\n    if (!values.confirmPassword) {\r\n        errors.confirmPassword = 'Required'\r\n    } else if (values.confirmPassword.length < 8) {\r\n        errors.confirmPassword = 'Password must be more than 8 characters long';\r\n    }\r\n    return errors;\r\n}\r\n\r\nexport let validationSchema = yup.object().shape({\r\n    email: yup.string()\r\n        .email('Email is invalid')\r\n        .required('Email is required'),\r\n    password: yup.string()\r\n        .min(8, 'Password must be at least 8 characters')\r\n        .required('Password is required'),\r\n    confirmPassword: yup.string()\r\n        .oneOf([yup.ref('password'), null], 'Passwords must match')\r\n        .required('Confirm Password is required'),\r\n    acceptTerms: yup.bool()\r\n        .oneOf([true], 'Accept Ts & Cs is required')\r\n})\r\n\r\n\r\n\r\n\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\nexport const Checkbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children,\r\n        error,\r\n        title,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label style={{position: 'relative'}}>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps}\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n            {children ? title : children}\r\n\r\n            <div style={{color: 'red', position: 'absolute', top: '30px'}}>\r\n                {error}\r\n            </div>\r\n        </label>\r\n    )\r\n}\r\n//types\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n    error?: string | null\r\n}\r\n","import React from 'react';\r\nimport s from './AuthRegistr.module.scss';\r\nimport './../../../src/styles/vars.scss';\r\nimport {useFormik} from 'formik';\r\nimport {initialValuesType} from './RegistrationContainer';\r\nimport {Input} from '../../components/common/c1-SuperInputText/Input';\r\nimport Logo from '../../components/common/logo/Logo';\r\nimport Title from '../../components/common/title/Title';\r\nimport {Button, Size, Variant} from '../../components/common/c2-SuperButton/Button';\r\nimport {validationSchema} from '../../assets/Validators/validators';\r\nimport {Checkbox} from '../../components/common/c3-SuperCheckbox/Checkbox';\r\n\r\nexport type PropsType = {\r\n    initialValues: initialValuesType\r\n    onSubmit: (values: initialValuesType) => void\r\n}\r\n\r\nexport const Registration: React.FC<PropsType> = React.memo(props => {\r\n    const {\r\n        initialValues,\r\n        onSubmit,\r\n        // validate\r\n    } = props\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    });\r\n\r\n    return (\r\n        <div className={s.form}>\r\n            <div className={s.containerForm}>\r\n                <div className={s.formWrapper}>\r\n                    <Logo/>\r\n                    <Title title=\"Sign In\"/>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n\r\n                        <Input\r\n                            type={'text'}\r\n                            title={'Email'}\r\n                            error={(formik.touched.email && formik.errors.email) ? formik.errors.email : null}\r\n                            {...formik.getFieldProps('email')}\r\n                        />\r\n\r\n                        <Input\r\n                            type={'password'}\r\n                            title={'Password'}\r\n                            error={(formik.touched.password && formik.errors.password) ? formik.errors.password : null}\r\n                            {...formik.getFieldProps('password')}\r\n                        />\r\n\r\n                        <Input\r\n                            type={'password'}\r\n                            title={'Confirm password'}\r\n                            error={(formik.touched.confirmPassword && formik.errors.confirmPassword) ? formik.errors.confirmPassword : null}\r\n                            {...formik.getFieldProps('confirmPassword')}\r\n                        />\r\n\r\n                        <Checkbox\r\n                            error={(formik.touched.acceptTerms && formik.errors.acceptTerms) ? formik.errors.acceptTerms : null}\r\n                            {...formik.getFieldProps('acceptTerms')}\r\n                        >Accept Terms & Conditions</Checkbox>\r\n\r\n                        <div className={s.btnInner}>\r\n                            <Button size={Size.small} variant={Variant.default} title=\"Cancel\"/>\r\n                            <Button size={Size.medium} variant={Variant.primary} title=\"Register\"/>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\n","import {useDispatch} from 'react-redux';\r\nimport {isRegistrationTC} from '../../bll/RegistrationReducer';\r\nimport {Registration} from './Registration';\r\nimport React from 'react';\r\n\r\n\r\nexport type initialValuesType = {\r\n    email: string\r\n    password: string\r\n    confirmPassword?: string\r\n    acceptTerms?: string\r\n}\r\n\r\nexport const RegistrationContainer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const initialValues: initialValuesType = {\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        acceptTerms: ''\r\n    }\r\n\r\n    const onSubmit = React.useCallback((values: initialValuesType) => {\r\n        dispatch(isRegistrationTC(values))\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            <Registration\r\n                initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n            />\r\n        </>\r\n    );\r\n};\r\n","import {Dispatch} from 'redux';\r\nimport {authAPI, RegistrationParamsType} from '../dal/api';\r\n\r\nconst initState = {\r\n    isRegistration: true\r\n}\r\n\r\nexport const registrationReducer = (state: InitialStateLoading = initState, action: ActionType): InitialStateLoading => {\r\n    switch (action.type) {\r\n        case 'login/registration': {\r\n            return {...state, isRegistration: action.isRegistration}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// AC\r\nexport const isRegistrationAC = (isRegistration: boolean) => ({\r\n    type: 'login/registration', isRegistration\r\n} as const)\r\n\r\n// Thunk\r\nexport const isRegistrationTC = (data: RegistrationParamsType) => (dispatch: Dispatch) => {\r\n    authAPI.register(data)\r\n        .then(() => {\r\n            dispatch(isRegistrationAC(true))\r\n        })\r\n}\r\n\r\n//type\r\nexport type InitialStateLoading = typeof initState\r\ntype ActionType = ReturnType<typeof isRegistrationAC>\r\n","export default __webpack_public_path__ + \"static/media/loading.f3889154.svg\";","import React from 'react';\r\nimport loadingImg from '../../../assets/img/loading/loading.svg'\r\nimport s from './Loading.module.scss'\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className={s.wrapperLoading}>\r\n            <img src={loadingImg}/>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './Input.module.scss'\r\nimport {FieldConfig, useField} from 'formik';\r\n\r\n\r\nexport const InputFormik: React.FC<SuperInputTextPropsType> = ({title, ...props}) => {\r\n\r\n    const [visibleEye, setVisibleEye] = React.useState(false)\r\n\r\n    const [field, meta] = useField({...props, type: 'password'});\r\n    return (\r\n        <div className={s.group}>\r\n            <input\r\n                required\r\n                type={visibleEye ? 'text' : 'password'}\r\n                {...field}\r\n                className={s.input}\r\n                {...props}\r\n            />\r\n            <a className={`${s.passwordControl} ${visibleEye ? s.showPassword : s.hidePassword}`}\r\n               style={props.name === 'password' ? {display: 'inline'} : {display: 'none'}}\r\n               onClick={() => setVisibleEye((value) => !value)}\r\n            >\r\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <line x1=\"40\" y1=\"30\" x2=\"240\" y2=\"100\"/>\r\n                    <path fillRule=\"evenodd\" clipRule=\"evenodd\"\r\n                          d=\"M12 4.5C7 4.5 2.73 7.61 1 12C2.73 16.39 7 19.5 12 19.5C17 19.5 21.27 16.39 23 12C21.27 7.61 17 4.5 12 4.5ZM12 17C9.23997 17 6.99997 14.76 6.99997 12C6.99997 9.24 9.23997 6.99999 12 6.99999C14.76 6.99999 17 9.24 17 12C17 14.76 14.76 17 12 17ZM12 9C10.34 9 8.99997 10.34 8.99997 12C8.99997 13.66 10.34 15 12 15C13.66 15 15 13.66 15 12C15 10.34 13.66 9 12 9Z\"\r\n                          fill=\"#2D2E46\"/>\r\n                </svg>\r\n            </a>\r\n            <span className={s.highlight}/>\r\n            <span className={s.bar}/>\r\n            <label className={s.label}>{title}</label>\r\n\r\n            <div style={{color: 'red', position: 'absolute', top: '50px'}}>\r\n                {meta.touched && meta.error ? (<div className=\"error\">{meta.error}</div>) : null}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Types\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype SuperInputTextPropsType = DefaultInputPropsType & FieldConfig\r\n\r\n","import React from 'react';\r\nimport s from './NewPassword.module.scss';\r\nimport {Form, Formik} from 'formik';\r\nimport {initialValuesType} from './NewPasswordContainer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PATH} from '../../../Routes';\r\nimport {Loading} from '../../../components/common/loading/Loading';\r\nimport {Button, Size, Variant} from '../../../components/common/c2-SuperButton/Button';\r\nimport {InputFormik} from '../../../components/common/inputFormik/InputFormik';\r\n\r\n\r\nexport type PropsType = {\r\n    initialValues: initialValuesType\r\n    onSubmit: (values: initialValuesType) => void\r\n    disable: boolean\r\n    loading: boolean\r\n    validationSchema: any\r\n    toLoginPage: boolean\r\n}\r\n\r\nexport const NewPassword: React.FC<PropsType> = React.memo(props => {\r\n\r\n    const {initialValues, onSubmit, disable, loading, validationSchema, toLoginPage} = props\r\n\r\n    if (toLoginPage) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={onSubmit}\r\n            validationSchema={validationSchema}\r\n        >\r\n            <div className={s.form}>\r\n\r\n                {loading && <Loading/>}\r\n\r\n                <div className={s.containerForm}>\r\n                    <div className={s.formWrapper}>\r\n                        <h2 className={s.formTitle}>It-incubator </h2>\r\n                        <span className={s.formSubTitle}>Create new password</span>\r\n                        <Form className={s.formLogin}>\r\n                            <InputFormik\r\n                                title=\"Password\"\r\n                                name=\"password\"\r\n                            />\r\n                            <p className={s.textNewPassword}>Create new password and we will send you further\r\n                                instructions\r\n                                to email</p>\r\n                            <div className={s.buttonInner}>\r\n                                <Button size={Size.big} variant={Variant.primary} title=\"Create new password\"\r\n                                        disabled={disable}/>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Formik>\r\n\r\n    );\r\n});\r\n\r\n","import {authAPI, ForgotParamsType, SetNewPasswordParamsType} from '../dal/api';\r\nimport {AppThunk} from './store';\r\n\r\nconst initState = {\r\n    toCheckEmailPage: false,\r\n    setMailName: '',\r\n    toLoginPage: false,\r\n    buttonDisable: false,\r\n    loading: false\r\n}\r\n\r\nexport const passwordRecoveryReducer = (state: InitialStateLoading = initState, action: ForgotActionType): InitialStateLoading => {\r\n    switch (action.type) {\r\n        case 'RECOVERY/CHECK-MAIL-PAGE':\r\n            return {...state, toCheckEmailPage: action.toCheckEmailPage}\r\n        case 'RECOVERY/SET-MAIL-NAME':\r\n            return {...state, setMailName: action.setMailName}\r\n        case 'RECOVERY/LOGIN-PAGE':\r\n            return {...state, toLoginPage: action.toLoginPage}\r\n        case 'RECOVERY/BUTTON-DISABLE':\r\n            return {...state, buttonDisable: action.disable}\r\n        case 'RECOVERY/LOADING-SHOW':\r\n            return {...state, loading: action.loading}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//action\r\nconst toCheckEmailPageAC = (toCheckEmailPage: boolean) => ({\r\n    type: 'RECOVERY/CHECK-MAIL-PAGE', toCheckEmailPage: toCheckEmailPage\r\n} as const)\r\nconst getMailNameAC = (setMailName: string) => ({type: 'RECOVERY/SET-MAIL-NAME', setMailName} as const)\r\nconst toLoginPageAC = (toLoginPage: boolean) => ({type: 'RECOVERY/LOGIN-PAGE', toLoginPage} as const)\r\nexport const disableButtonAC = (disable: boolean) => ({type: 'RECOVERY/BUTTON-DISABLE', disable} as const)\r\nexport const showLoadingAC = (loading: boolean) => ({type: 'RECOVERY/LOADING-SHOW', loading} as const)\r\n//thunks\r\nexport const setMailTC = (data: ForgotParamsType): AppThunk => (dispatch) => {\r\n    dispatch(disableButtonAC(true))\r\n    dispatch(showLoadingAC(true))\r\n    authAPI.recovery(data)\r\n        .then(res => {\r\n            dispatch(toCheckEmailPageAC(true))\r\n            dispatch(getMailNameAC(data.email))\r\n            console.log(res.data.info)\r\n        })\r\n        .catch(rej => {\r\n            console.log(rej.response.data.error)\r\n        })\r\n        .finally(() => {\r\n                dispatch(disableButtonAC(false))\r\n                dispatch(showLoadingAC(false))\r\n            }\r\n        )\r\n}\r\nexport const setNewPasswordTC = (data: SetNewPasswordParamsType): AppThunk => (dispatch) => {\r\n    dispatch(disableButtonAC(true))\r\n    dispatch(showLoadingAC(true))\r\n    authAPI.setNewPassword(data)\r\n        .then(res => {\r\n            dispatch(toLoginPageAC(true))\r\n            console.log(res.data.info)\r\n        })\r\n        .catch(rej => {\r\n            console.log(rej.response.data.error)\r\n        })\r\n        .finally(() => {\r\n            dispatch(disableButtonAC(false))\r\n            dispatch(showLoadingAC(false))\r\n        })\r\n}\r\n//type\r\nexport type InitialStateLoading = typeof initState\r\nexport type setMailActionType = ReturnType<typeof toCheckEmailPageAC>\r\nexport type mailActionType = ReturnType<typeof getMailNameAC>\r\nexport type toLoginPageActionType = ReturnType<typeof toLoginPageAC>\r\nexport type buttonDisableActionType = ReturnType<typeof disableButtonAC>\r\nexport type showLoadingActionType = ReturnType<typeof showLoadingAC>\r\nexport type ForgotActionType = setMailActionType | mailActionType | toLoginPageActionType | buttonDisableActionType |\r\n    showLoadingActionType\r\n","import React from 'react';\r\nimport {NewPassword} from './NewPassword';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useParams} from 'react-router-dom';\r\nimport {setNewPasswordTC} from '../../../bll/PasswordRecoveryReducer';\r\nimport {AppStateType} from '../../../bll/store';\r\nimport * as yup from 'yup';\r\n\r\n\r\nexport const ForgotNewPasswordContainer = () => {\r\n    const disable = useSelector<AppStateType, boolean>(state => state.recovery.buttonDisable)\r\n    const loading = useSelector<AppStateType, boolean>(state => state.recovery.loading)\r\n    const toLoginPage = useSelector<AppStateType, boolean>(state => state.recovery.toLoginPage)\r\n    const {token} = useParams<{ token: string }>()\r\n    const dispatch = useDispatch()\r\n\r\n    const initialValues: initialValuesType = {\r\n        password: '',\r\n        resetPasswordToken: token\r\n    }\r\n\r\n    const onSubmit = React.useCallback((values: initialValuesType) => {\r\n        // alert(JSON.stringify(values))\r\n        dispatch(setNewPasswordTC(values))\r\n    }, [dispatch])\r\n\r\n    const validationSchema = yup.object().shape({\r\n        password: yup.string()\r\n            .min(8, 'Password must be at least 8 characters')\r\n            .required('Password is required'),\r\n    })\r\n    return (\r\n        <>\r\n            <NewPassword\r\n                initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n                disable={disable}\r\n                loading={loading}\r\n                validationSchema={validationSchema}\r\n                toLoginPage={toLoginPage}\r\n            />\r\n\r\n        </>\r\n    );\r\n};\r\n//types\r\nexport type initialValuesType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/mail.bc3a4042.svg\";","import React from 'react';\r\nimport s from './CheckEmail.module.scss';\r\nimport mail from '../../../assets/img/authForgotPasswordCheckEmail/mail.svg'\r\nimport {useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../bll/store';\r\n\r\n\r\nexport const CheckEmail = React.memo(() => {\r\n    const mailName = useSelector<AppStateType, string>(state => state.recovery.setMailName)\r\n\r\n    return (\r\n        <div className={s.form}>\r\n            <div className={s.containerForm}>\r\n                <div className={s.formWrapper}>\r\n                    <h2 className={s.formTitle}>It-incubator</h2>\r\n                    <img className={s.imgMail} src={mail} alt=\"mail\"/>\r\n                    <span className={s.formSubTitle}>Check Email</span>\r\n                    <p className={s.textCheckEmail}>We’ve sent an Email with instructions to {mailName}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\n","import React from 'react';\r\nimport s from './EnterEmail.module.scss';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport {PATH} from '../../../Routes';\r\nimport {Form, Formik} from 'formik';\r\nimport {initialValuesType} from './EnterEmailContainer';\r\nimport {Loading} from '../../../components/common/loading/Loading';\r\nimport {Button, Size, Variant} from '../../../components/common/c2-SuperButton/Button';\r\nimport {InputFormik} from '../../../components/common/inputFormik/InputFormik';\r\n\r\n\r\nexport type PropsType = {\r\n    initialValues: initialValuesType\r\n    onSubmit: (values: initialValuesType) => void\r\n    isMail: boolean\r\n    disable: boolean\r\n    loading: boolean\r\n    validationSchema: any\r\n}\r\n\r\nexport const EnterEmail: React.FC<PropsType> = React.memo(props => {\r\n\r\n    const {initialValues, onSubmit, isMail, disable, loading, validationSchema} = props\r\n\r\n    if (isMail) {\r\n        return <Redirect to={PATH.FORGOT_EMAIL}/>\r\n    }\r\n    return (\r\n        <Formik initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n                validationSchema={validationSchema}\r\n        >\r\n            <div className={s.form}>\r\n\r\n                {loading && <Loading/>}\r\n\r\n                <div className={s.containerForm}>\r\n                    <div className={s.formWrapper}>\r\n                        <h2 className={s.formTitle}>It-incubator </h2>\r\n                        <span className={s.formSubTitle}>Forgot your password?</span>\r\n                        <Form className={s.formEmail}>\r\n\r\n                            <InputFormik\r\n                                type=\"email\"\r\n                                title=\"Email\"\r\n                                name=\"email\"\r\n                            />\r\n\r\n                            <p className={s.textEmail}>Enter your email address and we will send you further\r\n                                instructions </p>\r\n                            <div className={s.buttonInner}>\r\n                                <Button size={Size.big} variant={Variant.primary} title=\"Send Instructions\"\r\n                                        disabled={disable}/>\r\n                            </div>\r\n\r\n                        </Form>\r\n\r\n                        <div className={s.blockSingUp}>\r\n                            <span className={s.formText}>Did you remember your password?</span>\r\n                            <NavLink to={PATH.LOGIN} className={s.linkSingUp}>Try logging in</NavLink>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Formik>\r\n    );\r\n});\r\n\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../bll/store';\r\nimport {EnterEmail} from './EnterEmail';\r\nimport {setMailTC} from '../../../bll/PasswordRecoveryReducer';\r\nimport * as yup from 'yup';\r\n\r\n\r\nexport const EnterEmailContainer = () => {\r\n    const isMail = useSelector<AppStateType, boolean>(state => state.recovery.toCheckEmailPage)\r\n    const disable = useSelector<AppStateType, boolean>(state => state.recovery.buttonDisable)\r\n    const loading = useSelector<AppStateType, boolean>(state => state.recovery.loading)\r\n    const dispatch = useDispatch()\r\n\r\n    const initialValues: initialValuesType = {\r\n        email: '',\r\n        from: '',\r\n        message: `<div style=\"background-color: lime; padding: 15px\">\r\n        password recovery link: \r\n        <a href='https://marmon179.github.io/project/#/set-new-password/$token$'>\r\n        link</a></div>`\r\n    }\r\n    const validationSchema = yup.object().shape({\r\n        email: yup.string()\r\n            .email('Email is invalid')\r\n            .required('Email is required'),\r\n    })\r\n    const onSubmit = React.useCallback((values: initialValuesType) => {\r\n        // alert(JSON.stringify(values))\r\n        dispatch(setMailTC(values))\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            <EnterEmail\r\n                initialValues={initialValues}\r\n                onSubmit={onSubmit}\r\n                isMail={isMail}\r\n                disable={disable}\r\n                loading={loading}\r\n                validationSchema={validationSchema}\r\n            />\r\n\r\n        </>\r\n    );\r\n};\r\n//types\r\nexport type initialValuesType =\r\n    {\r\n        email: string,\r\n        from: any,\r\n        message: string\r\n    }\r\n\r\n","import {AuthMeResponseType} from '../dal/api';\r\nimport {setInitializeAppActionType} from './auth-reducer';\r\n\r\nconst initState = {\r\n    meObject: {} as AuthMeResponseType,\r\n}\r\n\r\nexport const appReducer = (state: InitialStateLoading = initState, action: AppReducerActionType): InitialStateLoading => {\r\n    switch (action.type) {\r\n        case 'APP/USER-DATA':\r\n            return {...state, meObject: action.userData}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUserDataAC = (userData: AuthMeResponseType) => ({\r\n    type: 'APP/USER-DATA', userData\r\n} as const)\r\n//thunks\r\n// export const setUserDataTC = (): AppThunk => (dispatch) => {\r\n//     authAPI.me()\r\n//         .then((res: AxiosResponse<AuthMeResponseType>) => {\r\n//             dispatch(setUserDataAC(res.data))\r\n//             dispatch(setIsLoggedAC(true))\r\n//         })\r\n//         .catch((error: AxiosError) => {\r\n//             console.log('Error', error)\r\n//         })\r\n// }\r\n\r\n//type\r\nexport type InitialStateLoading = typeof initState\r\nexport type SetUserActionType = ReturnType<typeof setUserDataAC>\r\nexport type AppReducerActionType = SetUserActionType | setInitializeAppActionType\r\n","import {authAPI, AuthMeResponseType, LoginParamsType} from '../dal/api';\r\nimport {SetUserActionType, setUserDataAC} from './app-reducer';\r\nimport {AppThunk} from './store';\r\nimport {AxiosError, AxiosResponse} from 'axios';\r\n\r\nconst initState = {\r\n    isLoggedIn: false,\r\n    isInitialized: false,\r\n    error: '' as string | null\r\n}\r\n\r\nexport const authReducer = (state: InitialStateLoading = initState, action: AuthActionType): InitialStateLoading => {\r\n    switch (action.type) {\r\n        case 'login/SET-IS-LOGGED-IN':\r\n            return {...state, isLoggedIn: action.isLoggedIn}\r\n        case 'APP/INITIALIZE-APP':\r\n            return {...state, isInitialized: action.isInitialized}\r\n        case 'APP/SET_AUTH_ERROR':\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setIsLoggedAC = (isLoggedIn: boolean) => ({type: 'login/SET-IS-LOGGED-IN', isLoggedIn} as const)\r\nexport const setInitializeAppAC = (isInitialized: boolean) => ({type: 'APP/INITIALIZE-APP', isInitialized} as const)\r\nexport const setAuthError = (error: string | null) => ({type: 'APP/SET_AUTH_ERROR', error} as const)\r\n\r\n// Thunks\r\nexport const setIsLoggedTC = (data: LoginParamsType): AppThunk => (dispatch) => {\r\n    authAPI.login(data)\r\n        .then(res => {\r\n            dispatch(setIsLoggedAC(true))\r\n        })\r\n}\r\nexport const initializeTC = (): AppThunk => (dispatch) => {\r\n    authAPI.me()\r\n        .then((res: AxiosResponse<AuthMeResponseType>) => {\r\n            dispatch(setInitializeAppAC(true))\r\n            dispatch(setUserDataAC(res.data))\r\n            if (res.data.error) {\r\n                setAuthError(res.data.error)\r\n            } else {\r\n                setAuthError(null)\r\n            }\r\n        })\r\n        .catch((error: AxiosError<{ error: string }>) => {\r\n            dispatch(setInitializeAppAC(true))\r\n            if (error.response) {\r\n                setAuthError(error.response.data.error)\r\n            } else {\r\n                setAuthError(null)\r\n            }\r\n        })\r\n}\r\n//type\r\nexport type InitialStateLoading = typeof initState\r\nexport type setInitializeAppActionType = ReturnType<typeof setInitializeAppAC>\r\nexport type setIsLoggedActionType = ReturnType<typeof setIsLoggedAC>\r\nexport type setAuthErrorActionType = ReturnType<typeof setAuthError>\r\nexport type AuthActionType =\r\n    | SetUserActionType\r\n    | setInitializeAppActionType\r\n    | setIsLoggedActionType\r\n    | setAuthErrorActionType\r\n\r\n","import React from 'react';\r\nimport s from './AuthLogin.module.scss';\r\nimport {useFormik} from 'formik';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {PATH} from '../../Routes';\r\nimport Logo from \"../../components/common/logo/Logo\";\r\nimport Title from \"../../components/common/title/Title\";\r\nimport {Input} from \"../../components/common/c1-SuperInputText/Input\";\r\nimport {FormikErrorType, initialValuesType} from \"./AuthLoginContainer\";\r\nimport {Button} from \"../../components/common/c2-SuperButton/Button\";\r\n\r\n\r\nexport type PropsType = {\r\n    initialValues: initialValuesType\r\n    onSubmit: (values: initialValuesType) => void\r\n    validate: (values: initialValuesType) => FormikErrorType\r\n}\r\n\r\nexport const AuthLogin = (props: PropsType) => {\r\n\r\n    const {\r\n        initialValues,\r\n        onSubmit,\r\n        validate\r\n    } = props\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        // validate\r\n    });\r\n\r\n    return (\r\n        <div className={s.form}>\r\n            <div className={s.containerForm}>\r\n                <div className={s.formWrapper}>\r\n\r\n                    <Logo/>\r\n                    <Title title=\"Sign In\"/>\r\n\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        {/*<InputEmail values={formik.values.email} onChange={formik.handleChange}/>*/}\r\n                        {/*<InputPassword title=\"Password\" onChange={formik.handleChange} values={formik.values.password}/>*/}\r\n\r\n                        <Input\r\n                            type={'text'}\r\n                            title={'Email'}\r\n                            error={(formik.touched.email && formik.errors.email) ? formik.errors.email : null}\r\n                            {...formik.getFieldProps('email')}\r\n                        />\r\n\r\n                        <Input\r\n                            type={'password'}\r\n                            title={'Password'}\r\n                            error={(formik.touched.password && formik.errors.password) ? formik.errors.password : null}\r\n                            {...formik.getFieldProps('password')}\r\n                        />\r\n\r\n                        <NavLink to={PATH.RECOVERY_PASSWORD} className={s.linkForgotPassword}>Forgot password</NavLink>\r\n                        <div className={s.buttonInner}>\r\n                            <Button title=\"Login\"/>\r\n                        </div>\r\n                    </form>\r\n\r\n                    <div className={s.blockSingUp}>\r\n                        <span className={s.formText}>Don’t have an account?</span>\r\n                        <NavLink to={PATH.REGISTRATION} className={s.linkSingUp}>Sign Up </NavLink>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AuthLogin;","import React from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {setIsLoggedTC} from '../../bll/auth-reducer';\r\nimport AuthLogin from \"./AuthLogin\";\r\nimport {validators} from \"../../assets/Validators/validators\";\r\nimport {LoginParamsType} from \"../../dal/api\";\r\n\r\n\r\nexport type initialValuesType = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\nexport type FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n}\r\n\r\nexport const AuthLoginContainer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const initialValues: initialValuesType = {\r\n        email: '',\r\n        password: '',\r\n    }\r\n\r\n    const validate = (values: initialValuesType) => {\r\n        return validators(values);\r\n    };\r\n\r\n    const onSubmit = (data: LoginParamsType) => {\r\n        dispatch(setIsLoggedTC(data))\r\n    }\r\n\r\n    return (\r\n        <AuthLogin\r\n            initialValues={initialValues}\r\n            validate={validate}\r\n            onSubmit={onSubmit}\r\n        />\r\n    );\r\n};\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n\r\nexport const SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n        onEnter\r\n        && e.key === 'Enter'\r\n        && onEnter()\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                {...restProps}\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n\r\n        </>\r\n    )\r\n}\r\n//types\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\n","import React, {useState} from 'react';\r\nimport {SuperInputText} from '../../../components/common/c1-SuperInputText/SuperInputText';\r\nimport style from './TestSuperInput.module.css'\r\n\r\nexport const TestSuperInput = () => {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'Введите текст'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.column}>\r\n            <SuperInputText\r\n                value={text}\r\n                onChangeText={setText}\r\n                onEnter={showAlert}\r\n                error={error}\r\n            />\r\n            <SuperInputText/>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\nexport const SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default}  ${className} `\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps}\r\n        />\r\n    )\r\n}\r\n//types\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\n","import React, {useState} from 'react';\r\nimport style from './TestSuperButton.module.css'\r\nimport {SuperButton} from '../../../components/common/c2-SuperButton/SuperButton';\r\n\r\nexport const TestSuperButton = () => {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'Введите текст'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.column}>\r\n            <SuperButton>\r\n                default\r\n            </SuperButton>\r\n\r\n            <SuperButton\r\n                red\r\n                onClick={showAlert}\r\n            >\r\n                delete\r\n            </SuperButton>\r\n\r\n            <SuperButton disabled>\r\n                disabled\r\n            </SuperButton>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n\r\nexport const SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps}\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label>\r\n    )\r\n}\r\n//types\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n","import React, {useState} from 'react';\r\nimport {SuperInputText} from '../../../components/common/c1-SuperInputText/SuperInputText';\r\nimport style from './TestSuperCheckbox.module.css'\r\nimport {SuperCheckbox} from '../../../components/common/c3-SuperCheckbox/SuperCheckbox';\r\n\r\nexport const TestSuperCheckbox = () => {\r\n\r\n    return (\r\n        <div className={style.column}>\r\n            <SuperCheckbox/>\r\n        </div>\r\n    );\r\n};\r\n\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport {SuperInputText} from '../c1-SuperInputText/SuperInputText'\r\nimport s from './SuperEditableSpan.module.css'\r\n\r\nexport const SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus,\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false)\r\n\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false)\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true)\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${s.span} ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n                        {...restProps}\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        ✎ {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n//types\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\ntype SuperEditableSpanType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    spanProps?: DefaultSpanPropsType\r\n}","import React, {useState} from 'react';\r\nimport style from './TestSuperEditableSpan.module.css'\r\nimport {restoreState, saveState} from './localStorage/localStorage';\r\nimport {SuperEditableSpan} from '../../../components/common/c4-SuperEditableSpan/SuperEditableSpan';\r\nimport {SuperButton} from '../../../components/common/c2-SuperButton/SuperButton';\r\n\r\nexport const TestSuperEditableSpan = () => {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n        setValue(restoreState<string>('editable-span-value', ''))\r\n    }\r\n\r\n    return (\r\n        <div className={style.column}>\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text...'}}\r\n                />\r\n            </div>\r\n            <div className={style.button}><SuperButton onClick={save}>save</SuperButton>\r\n                <SuperButton onClick={restore} red>restore</SuperButton></div>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\nimport s from './SuperSelect.module.scss'\r\n\r\n\r\nexport const SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options, className,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: any[] = options ? options.map((o, i) => (\r\n        <option className={s.option} key={o + '-' + i} value={o}>{o}</option>\r\n    )) : []; // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        // onChange, onChangeOption\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    const finalSelectClassName = s.select + (\r\n        className\r\n            ? '' + className\r\n            : ''\r\n    )\r\n\r\n    return (\r\n        <select className={finalSelectClassName} onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n//types\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n","import React, {useState} from 'react';\r\nimport {SuperSelect} from '../../../components/common/c5-SuperSelect/SuperSelect';\r\nimport style from './TestSuperSelect.module.css'\r\n\r\nconst arr = ['hello', 'bye', 'success']\r\n\r\nexport const TestSuperSelect = () => {\r\n    const [value, onChangeOption] = useState(arr[1])\r\n\r\n    return (\r\n        <div className={style.column}>\r\n            <SuperSelect\r\n                options={arr}\r\n                value={value}\r\n                onChangeOption={onChangeOption}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperRadio.module.css'\r\n\r\n\r\nexport const SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name, className,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => (\r\n        <div className={s.body}>\r\n            <label key={name + '-' + i} className={s.label}>\r\n                <input\r\n                    className={s.radio}\r\n                    type={'radio'}\r\n                    name={name}\r\n                    checked={o === value}\r\n                    value={o}\r\n                    onChange={onChangeCallback}\r\n                    {...restProps}\r\n                />\r\n                <div className={s.radDesign}/>\r\n                <div className={s.RadText}>{o}</div>\r\n            </label>\r\n        </div>\r\n    )) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n//types\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n","import React, {useState} from 'react';\r\nimport {SuperRadio} from '../../../components/common/c6-SuperRadio/SuperRadio';\r\nimport style from './TestSuperRadio.module.css'\r\n\r\nconst arr = ['hello', 'bye', 'success']\r\n\r\nexport const TestSuperRadio = () => {\r\n    const [value, onChangeOption] = useState(arr[1])\r\n\r\n    return (\r\n        <div className={style.column}>\r\n            <SuperRadio\r\n                name={'radio'}\r\n                options={arr}\r\n                value={value}\r\n                onChangeOption={onChangeOption}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react';\r\nimport s from './SuperRange.module.css';\r\n\r\n\r\nexport const SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeRange,\r\n        className,\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e);\r\n        onChangeRange && onChangeRange(+e.currentTarget.value);\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : ''}`;\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'range'}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n                {...restProps}\r\n            />\r\n\r\n        </>\r\n    );\r\n}\r\n//types\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\ntype SuperRangePropsType = DefaultInputPropsType & {\r\n    onChangeRange: (value: number) => void\r\n    value: number,\r\n};\r\n","import React, {useState} from 'react';\r\nimport {SuperRange} from '../../../components/common/c7-SuperRange/SuperRange';\r\nimport style from './TestSuperRange.module.css'\r\n\r\n\r\nexport const TestSuperRange = () => {\r\n    const [value, setValue] = useState<number>(10)\r\n\r\n    return (\r\n        <div className={style.column}>\r\n            <span>{value}</span>\r\n            <SuperRange\r\n                value={value}\r\n                onChangeRange={setValue}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport style from './test.module.css'\r\nimport {TestSuperInput} from './testSuperInput/TestSuperInput';\r\nimport {TestSuperButton} from './testSuperButton/TestSuperButton';\r\nimport {TestSuperCheckbox} from './testSuperCheckbox/TestSuperCheckbox';\r\nimport {TestSuperEditableSpan} from './testSuperEditableSpan/TestSuperEditableSpan';\r\nimport {TestSuperSelect} from './testSuperSelect/TestSuperSelect';\r\nimport {TestSuperRadio} from './testSuperRadio/TestSuperRadio';\r\nimport {TestSuperRange} from './testSuperRange/TestSuperRange';\r\n\r\nexport const Test = () => {\r\n    return (\r\n        <div className={style.test}>\r\n            <span>\r\n                SuperInputText\r\n            </span>\r\n            <div>\r\n                <TestSuperInput/>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <hr/>\r\n            <span>\r\n                SuperButton\r\n            </span>\r\n            <div>\r\n                <TestSuperButton/>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <hr/>\r\n            <span>\r\n                SuperRadio\r\n            </span>\r\n            <div>\r\n                <TestSuperRadio/>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <hr/>\r\n            <span>\r\n                SuperEditableSpan\r\n            </span>\r\n            <div>\r\n                <TestSuperEditableSpan/>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <hr/>\r\n            <span>\r\n                SuperSelect\r\n            </span>\r\n            <div>\r\n                <TestSuperSelect/>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <hr/>\r\n            <span>\r\n                SuperCheckbox\r\n            </span>\r\n            <div>\r\n                <TestSuperCheckbox/>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <hr/>\r\n            <span>\r\n                SuperRange\r\n            </span>\r\n            <div>\r\n                <TestSuperRange/>\r\n            </div>\r\n            <hr/>\r\n            {/*----------------------------------------------------*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport {Profile} from './pages/Profile';\r\nimport Error404 from './pages/error404/Error404';\r\nimport {AuthLogin} from './pages/Login/AuthLogin';\r\nimport {RegistrationContainer} from './pages/Registr/RegistrationContainer';\r\nimport {ForgotNewPasswordContainer} from './pages/passwordRecovery/enterNewPassword/NewPasswordContainer';\r\nimport {CheckEmail} from './pages/passwordRecovery/checkEmail/CheckEmail';\r\nimport { EnterEmailContainer } from './pages/passwordRecovery/enterEmail/EnterEmailContainer';\r\nimport {AuthLoginContainer} from \"./pages/Login/AuthLoginContainer\";\r\nimport {Test} from './pages/test/Test';\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    REGISTRATION: '/registration',\r\n    PROFILE: '/profile',\r\n    RECOVERY_PASSWORD: '/recovery-password',\r\n    NEW_PASSWORD: '/set-new-password/:token',\r\n    TEST: '/test',\r\n    HEADER: '/header',\r\n    FORGOT_EMAIL:'/check-email'\r\n}\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.LOGIN}/>}/>\r\n\r\n                <Route path={PATH.LOGIN} render={() => <AuthLoginContainer/>}/>\r\n                <Route path={PATH.REGISTRATION} render={() => <RegistrationContainer/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.RECOVERY_PASSWORD} render={() => <EnterEmailContainer/>}/>\r\n                <Route path={PATH.NEW_PASSWORD} render={() => <ForgotNewPasswordContainer/>}/>\r\n                <Route path={PATH.FORGOT_EMAIL} render={() => <CheckEmail/>}/>\r\n                <Route path={PATH.TEST} render={() => <Test/>}/>\r\n\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Routes;","import React from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\nimport style from './Header.module.css'\r\nimport {PATH} from '../../Routes';\r\n\r\nexport function Header() {\r\n    return (\r\n        <div className={style.header}>\r\n            <NavLink to={PATH.LOGIN} className={style.link} activeClassName={style.active}>Login</NavLink>\r\n            <NavLink to={PATH.REGISTRATION} className={style.link} activeClassName={style.active}>Registration</NavLink>\r\n            <NavLink to={PATH.RECOVERY_PASSWORD} className={style.link} activeClassName={style.active}>Forgot</NavLink>\r\n            <NavLink to={PATH.FORGOT_EMAIL} className={style.link} activeClassName={style.active}>Check</NavLink>\r\n            <NavLink to={PATH.NEW_PASSWORD} className={style.link} activeClassName={style.active}>NewPassword</NavLink>\r\n            <NavLink to={PATH.PROFILE} className={style.link} activeClassName={style.active}>Profile</NavLink>\r\n\r\n            <NavLink to={PATH.TEST} className={style.link} activeClassName={style.active}>Test</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport Routes from './Routes';\r\nimport {Header} from './pages/header/Header';\r\nimport './App.css'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from './bll/store';\r\nimport {initializeTC} from './bll/auth-reducer';\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch()\r\n    const isInitialized = useSelector<AppStateType, boolean>((state => state.auth.isInitialized))\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeTC())\r\n    }, [dispatch])\r\n\r\n    if (!isInitialized) {\r\n        return <div>\r\n            ...Loading\r\n        </div>\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n            <Header/>\r\n            {/*<Main />*/}\r\n            <Routes/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport {AuthActionType, authReducer} from './auth-reducer';\r\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk'\r\nimport {appReducer, AppReducerActionType} from './app-reducer';\r\nimport {ForgotActionType, passwordRecoveryReducer} from './PasswordRecoveryReducer';\r\n\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    recovery: passwordRecoveryReducer\r\n})\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store\r\n\r\nexport type AppStateType = ReturnType<typeof reducers>\r\nexport type AppActionType = AuthActionType | AppReducerActionType | ForgotActionType\r\nexport type AppThunk = ThunkAction<void, AppStateType, unknown, AppActionType>\r\n\r\n//@ts-ignore\r\nwindow.store = store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./bll/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"group\":\"Input_group__2sms0\",\"input\":\"Input_input__15Muy\",\"bar\":\"Input_bar__2JMci\",\"highlight\":\"Input_highlight__2T5aX\",\"inputHighlighter\":\"Input_inputHighlighter__15Jte\",\"passwordControl\":\"Input_passwordControl__EfWCk\",\"showPassword\":\"Input_showPassword__31eN-\",\"hidePassword\":\"Input_hidePassword__3pgZ_\",\"label\":\"Input_label__MaPCx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerForm\":\"AuthLogin_containerForm__22l5H\",\"formWrapper\":\"AuthLogin_formWrapper__3iTus\",\"linkForgotPassword\":\"AuthLogin_linkForgotPassword__1Z9eL\",\"buttonInner\":\"AuthLogin_buttonInner__1IStY\",\"blockSingUp\":\"AuthLogin_blockSingUp__3Gqo2\",\"formText\":\"AuthLogin_formText___R6ry\",\"linkSingUp\":\"AuthLogin_linkSingUp__oC48c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__V5JXr\",\"small\":\"Button_small__1cL16\",\"medium\":\"Button_medium__1sup1\",\"big\":\"Button_big__1lnjB\",\"default\":\"Button_default__2iAg6\",\"primary\":\"Button_primary__1CrSj\",\"secondary\":\"Button_secondary__2uksu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerForm\":\"CheckEmail_containerForm__1UAVz\",\"formWrapper\":\"CheckEmail_formWrapper__16g94\",\"formTitle\":\"CheckEmail_formTitle__2PO7i\",\"imgMail\":\"CheckEmail_imgMail__mkvqv\",\"formSubTitle\":\"CheckEmail_formSubTitle__2ESPm\",\"textCheckEmail\":\"CheckEmail_textCheckEmail__3ErsG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__1SRJc\",\"checkbox\":\"SuperCheckbox_checkbox__3lCk1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"SuperRadio_body__24mnf\",\"label\":\"SuperRadio_label__fP36O\",\"radio\":\"SuperRadio_radio__3Bl2z\",\"radDesign\":\"SuperRadio_radDesign__1ZCgs\",\"RadText\":\"SuperRadio_RadText__Gf7qk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerForm\":\"AuthRegistr_containerForm__1AFIX\",\"formWrapper\":\"AuthRegistr_formWrapper__1LxcW\",\"btnInner\":\"AuthRegistr_btnInner__ODTD8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__2B_JM\",\"superInput\":\"SuperInputText_superInput__LSDRp\",\"errorInput\":\"SuperInputText_errorInput__1YSg1\",\"error\":\"SuperInputText_error__TR8XN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1jW8B\",\"red\":\"SuperButton_red__xgypa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"TestSuperEditableSpan_column__2CGzG\",\"button\":\"TestSuperEditableSpan_button__3S5Mp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__1CMrg\",\"option\":\"SuperSelect_option__2sQgI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error404_error__3-rr3\",\"dracula\":\"Error404_dracula__39W02\",\"p\":\"Error404_p__37dkH\",\"con\":\"Error404_con__2aCy9\",\"ani9\":\"Error404_ani9__3YrCC\",\"hair\":\"Error404_hair__3CSAd\",\"hairR\":\"Error404_hairR__1lesJ\",\"head\":\"Error404_head__2bMmv\",\"eye\":\"Error404_eye__3BR5_\",\"eyeR\":\"Error404_eyeR__RIJjK\",\"mouth\":\"Error404_mouth__2_S1B\",\"blod\":\"Error404_blod__3T-o7\",\"blod2\":\"Error404_blod2__1lCUL\",\"pageMs\":\"Error404_pageMs__1myBV\",\"pageMsg\":\"Error404_pageMsg__4bdJy\",\"goBack\":\"Error404_goBack__1UfvG\"};"],"sourceRoot":""}